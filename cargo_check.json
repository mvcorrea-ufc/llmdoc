{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/proc-macro2-d25ca270c2b83af0/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95","linked_libs":[],"linked_paths":[],"cfgs":["wrap_proc_macro"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/proc-macro2-100d030a214f7c13/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.18/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_ident","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.18/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libunicode_ident-dbb84fa985aff254.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libunicode_ident-dbb84fa985aff254.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.173","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.173/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.173/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extra_traits","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/libc-9e060aeade22cf4d/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","derive","serde_derive","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/serde-c94824b3ddd2906c/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.95","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro2","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libproc_macro2-fcf137d22a666e27.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libproc_macro2-fcf137d22a666e27.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.173","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_const_extern_fn"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/libc-5014fa665fc23df8/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/serde-e8089332f8eb029b/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"autocfg","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libautocfg-b97331a81f96fd76.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libautocfg-b97331a81f96fd76.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"quote","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libquote-9184bbd8707171f9.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libquote-9184bbd8707171f9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.173","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.173/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.173/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","extra_traits","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liblibc-a2e3868800888285.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_if","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcfg_if-cd2d5405181ab757.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"smallvec","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["const_generics","const_new"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsmallvec-ac36324a8c36e843.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#syn@2.0.103","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.103/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"syn","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.103/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["clone-impls","default","derive","extra-traits","fold","full","parsing","printing","proc-macro","visit","visit-mut"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsyn-38896d82b32549b5.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsyn-38896d82b32549b5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libmemchr-d46e1635feeab524.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["atomic_usize","default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/lock_api-c6b94a91ace53bec/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","race","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libonce_cell-c32c39df4f6f3153.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.219/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"serde_derive","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.219/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libserde_derive-4dae0cb038e6161d.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/parking_lot_core-df97a347b94fffef/build-script-build"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13","linked_libs":[],"linked_paths":[],"cfgs":["has_const_fn_trait_bound"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/lock_api-f55380f994e58e9b/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-lite-0.2.16/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pin_project_lite","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-lite-0.2.16/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpin_project_lite-7ed252a9586dfda6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","derive","serde_derive","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libserde-b119ba5e415555ee.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/parking_lot_core-68ca6881e319ea9a/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scopeguard-1.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"scopeguard","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scopeguard-1.2.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libscopeguard-8adb6a2a439aa729.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"itoa","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libitoa-997097df3c0dccab.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.9.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bitflags","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.9.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libbitflags-0fd81af2b4ead669.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"parking_lot_core","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libparking_lot_core-7ab40f8229c7b8d6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lock_api","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["atomic_usize","default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liblock_api-d17804c680761214.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/synstructure-0.13.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"synstructure","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/synstructure-0.13.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","proc-macro"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsynstructure-8d5883f6e178f2b5.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsynstructure-8d5883f6e178f2b5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot-0.12.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"parking_lot","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot-0.12.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libparking_lot-cf79fde6e899d0ad.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytes-1.10.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bytes","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytes-1.10.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libbytes-744cd85c4be21e08.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerofrom-derive@0.1.6","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-derive-0.1.6/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"zerofrom_derive","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-derive-0.1.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libzerofrom_derive-d197daf4e85e4080.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#yoke-derive@0.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-derive-0.8.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"yoke_derive","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-derive-0.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libyoke_derive-45d16a98c919e155.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-0.1.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerofrom","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-0.1.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","derive"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libzerofrom-ecefd43048de9ee8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stable_deref_trait-1.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"stable_deref_trait","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stable_deref_trait-1.2.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libstable_deref_trait-fc559d18524d7896.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.5.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-macros-2.5.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"tokio_macros","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-macros-2.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtokio_macros-7f23f05c4d451fed.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.10","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/socket2-0.5.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"socket2","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/socket2-0.5.10/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["all"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsocket2-d507238953c82683.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#yoke@0.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-0.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"yoke","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-0.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","derive","zerofrom"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libyoke-6d1e0dd76cc4d0e3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#mio@1.0.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mio-1.0.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"mio","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mio-1.0.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["net","os-ext","os-poll"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libmio-8eec6996889ee712.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#signal-hook-registry@1.4.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signal-hook-registry-1.4.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"signal_hook_registry","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signal-hook-registry-1.4.5/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsignal_hook_registry-fdea47279513b758.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-sys-0.8.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"core_foundation_sys","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-sys-0.8.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","link"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcore_foundation_sys-8ce981058154aecc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/getrandom-be2062599dc6c34b/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#foldhash@0.1.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foldhash-0.1.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"foldhash","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foldhash-0.1.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfoldhash-6fcea8f10f46df66.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tokio@1.45.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tokio","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bytes","default","fs","full","io-std","io-util","libc","macros","mio","net","parking_lot","process","rt","rt-multi-thread","signal","signal-hook-registry","socket2","sync","time","tokio-macros"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtokio-1a89b1ab82e7dc84.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerovec-derive@0.11.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-derive-0.11.1/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"zerovec_derive","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-derive-0.11.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libzerovec_derive-3936daa980f4d442.dylib"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/getrandom-dd783f9a1088ad95/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default-hasher","inline-more"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhashbrown-73a15a49dc65d3e3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-0.11.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerovec","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-0.11.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","derive","yoke"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libzerovec-f258c100a1735e06.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/displaydoc-0.2.5/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"displaydoc","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/displaydoc-0.2.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdisplaydoc-4bbd746dc477cb8b.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libgetrandom-87fab95f85462681.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/num-traits-ec48d54f0d9a1ced/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-core-0.3.31/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_core","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-core-0.3.31/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfutures_core-b1e4d65728333bb5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"once_cell","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","race","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libonce_cell-71251d1629ae439e.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libonce_cell-71251d1629ae439e.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","linked_libs":[],"linked_paths":[],"cfgs":["has_total_cmp"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/num-traits-74a2acfabcbc3022/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.34","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-core-0.1.34/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing_core","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-core-0.1.34/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","once_cell","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtracing_core-9b82a663e50917d7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#errno@0.3.12","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"errno","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.12/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liberrno-07e3a7488ccc6420.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/slab-8716a0fc5837fa74/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_traits","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","i128","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_traits-a09db4adb5c720ba.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ryu","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libryu-271d22dacd2e35b3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/thiserror-45d20336a7c11bae/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-sink-0.3.31/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_sink","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-sink-0.3.31/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfutures_sink-17ff28c532bd54d1.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/thiserror-2a48f720cdab94bb/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/slab-9cedc69a23af8f74/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tinystr@0.8.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinystr-0.8.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tinystr","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinystr-0.8.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","zerovec"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtinystr-19468e1ad8574d47.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.12","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"thiserror_impl","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-2.0.12/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libthiserror_impl-a24ecfab47b2a992.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"equivalent","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libequivalent-9741ec706f318da4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fnv","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfnv-53c9c2f807aaf547.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#litemap@0.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/litemap-0.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"litemap","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/litemap-0.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liblitemap-a5f00eea29ac7801.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.140","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/serde_json-3066821fc5b72cf6/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#writeable@0.6.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/writeable-0.6.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"writeable","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/writeable-0.6.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libwriteable-4b7ccbc709bb58ab.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.140","linked_libs":[],"linked_paths":[],"cfgs":["fast_arithmetic=\"64\""],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/serde_json-7a2f08d003d41fee/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#indexmap@2.9.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.9.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"indexmap","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.9.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libindexmap-797d5b50fd9b50dd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#http@1.3.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-1.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"http","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-1.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhttp-286daa09ffd1c72a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_locale_core@2.0.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_locale_core-2.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_locale_core","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_locale_core-2.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["zerovec"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libicu_locale_core-a04b1e02515cb60a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"slab","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libslab-2f4c26d8157ebe2d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#potential_utf@0.1.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/potential_utf-0.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"potential_utf","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/potential_utf-0.1.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["zerovec"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpotential_utf-ab99e7452a5acda8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerotrie@0.2.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerotrie-0.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerotrie","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerotrie-0.2.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["yoke","zerofrom"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libzerotrie-5b55a565ead45df3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tracing-attributes@0.1.29","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-attributes-0.1.29/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"tracing_attributes","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-attributes-0.1.29/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtracing_attributes-dca3de0c9578640d.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aho-corasick-1.1.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"aho_corasick","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aho-corasick-1.1.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["perf-literal","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libaho_corasick-d8c251b5c2386eb9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fnv","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfnv-c4cb32bb3eb61cda.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfnv-c4cb32bb3eb61cda.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strsim-0.11.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"strsim","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strsim-0.11.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libstrsim-1f2c695c909a48a7.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libstrsim-1f2c695c909a48a7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.3/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.3/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","limit_128"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/crunchy-136bd62409b0381b/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.173","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.173/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.173/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/libc-3d65b41c173371c5/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/icu_normalizer_data-b15210451b9edfd6/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/icu_properties_data-4f56a72f42e063ab/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@1.0.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","fs","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/rustix-c0b24ba21a7138a8/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ident_case-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ident_case","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ident_case-1.0.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libident_case-bde911e8dc03dbf6.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libident_case-bde911e8dc03dbf6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.8.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_syntax","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.8.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libregex_syntax-be22494d93218738.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"percent_encoding","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpercent_encoding-d43ef0b0b338fae4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.9","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_automata","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","dfa","dfa-build","dfa-onepass","dfa-search","hybrid","meta","nfa","nfa-backtrack","nfa-pikevm","nfa-thompson","perf","perf-inline","perf-literal","perf-literal-multisubstring","perf-literal-substring","std","syntax","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment","unicode-word-boundary"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libregex_automata-4c843bb3a75c3a80.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@1.0.7","linked_libs":[],"linked_paths":[],"cfgs":["static_assertions","libc","apple","bsd"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/rustix-12da715ea153d5f3/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_core-0.20.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"darling_core","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_core-0.20.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["strsim","suggestions"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdarling_core-0f827223ab125cdf.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdarling_core-0f827223ab125cdf.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.173","linked_libs":[],"linked_paths":[],"cfgs":["freebsd11","libc_const_extern_fn"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/libc-9993b5dcf0108292/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.3","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/crunchy-0f51d9006155ae87/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/icu_normalizer_data-dea265b1dbdd0325/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/icu_properties_data-7e3db11a4f0254a9/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["attributes","default","std","tracing-attributes"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtracing-81c72130970f612d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_provider@2.0.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_provider-2.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_provider","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_provider-2.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["baked","zerotrie"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libicu_provider-6f11c4247a5c247a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_collections@2.0.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_collections-2.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_collections","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_collections-2.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libicu_collections-f6d8c9b63dc5d97b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.140","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_json","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libserde_json-cdfed64648403a18.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.9.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-0.9.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"core_foundation","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core-foundation-0.9.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","link"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcore_foundation-46d175e6d986e5f9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tiny-keccak@2.0.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tiny-keccak-2.0.2/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tiny-keccak-2.0.2/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","shake"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/tiny-keccak-62dec0f21fc99083/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.31","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-io-0.3.31/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_io","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-io-0.3.31/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfutures_io-d02024c4217dc1a3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-utils-0.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pin_utils","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-utils-0.1.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpin_utils-646e4e0bf230b443.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-task-0.3.31/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_task","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-task-0.3.31/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfutures_task-b225eaa3a669f87e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#log@0.4.27","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"log","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liblog-7f2d3a9f04f933c9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.31/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_util","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.31/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","futures-io","futures-sink","io","memchr","sink","slab","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfutures_util-1b93be12a086809c.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#tiny-keccak@2.0.2","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/tiny-keccak-ce938f72413df177/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_properties_data","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libicu_properties_data-e1a36d92b3003ce9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_normalizer_data","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libicu_normalizer_data-ed5968e179eef304.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crunchy","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crunchy-0.2.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","limit_128"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcrunchy-a86e9ca2c0e17245.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcrunchy-a86e9ca2c0e17245.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@1.0.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustix","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-1.0.7/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","fs","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/librustix-8c8d65f79e9639d8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libc@0.2.173","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.173/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libc","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.173/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liblibc-c77c8b7cf3f78ee3.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liblibc-c77c8b7cf3f78ee3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_macro-0.20.11/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"darling_macro","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_macro-0.20.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdarling_macro-8e0542d929b88745.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-body-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"http_body","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-body-1.0.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhttp_body-729a633be9b9ff75.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libthiserror-ae4b18268b745925.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libthiserror-ae4b18268b745925.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ucd-trie@0.1.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ucd-trie-0.1.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ucd_trie","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ucd-trie-0.1.7/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libucd_trie-b67768fdac8621de.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libucd_trie-b67768fdac8621de.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.6.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-sys-0.6.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-sys-0.6.0/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/system-configuration-sys-1633195ec5cc3d9f/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fastrand@2.3.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fastrand-2.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fastrand","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fastrand-2.3.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfastrand-0877b8bb2f9e58ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cfg_if","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcfg_if-0cdaa6df3cf0bcfb.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcfg_if-0cdaa6df3cf0bcfb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"memchr","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libmemchr-f713ab56dd496633.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libmemchr-f713ab56dd496633.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/httparse-ab76f9a7d592d44c/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"getrandom","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libgetrandom-309db7a7035e8774.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libgetrandom-309db7a7035e8774.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pest@2.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest-2.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pest","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest-2.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","memchr","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpest-fce090dfa90f1dac.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpest-fce090dfa90f1dac.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tempfile@3.20.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.20.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tempfile","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tempfile-3.20.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","getrandom"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtempfile-d32f1b34bb52c52f.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1","linked_libs":[],"linked_paths":[],"cfgs":["httparse_simd_neon_intrinsics","httparse_simd"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/httparse-e296a1d2c9ae5ab0/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.6.0","linked_libs":["framework=SystemConfiguration"],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/system-configuration-sys-0b98ca4eebaa8d30/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#darling@0.20.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling-0.20.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"darling","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling-0.20.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","suggestions"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdarling-bf08785addf9bbfc.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdarling-bf08785addf9bbfc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_normalizer@2.0.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer-2.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_normalizer","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer-2.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["compiled_data"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libicu_normalizer-2a53c653346b079d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tiny-keccak@2.0.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tiny-keccak-2.0.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tiny_keccak","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tiny-keccak-2.0.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","shake"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtiny_keccak-b5a6cb06c5edbb13.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtiny_keccak-b5a6cb06c5edbb13.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#icu_properties@2.0.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties-2.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"icu_properties","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties-2.0.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["compiled_data"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libicu_properties-4ba7e4373e9708f6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-1.11.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-1.11.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","perf","perf-backtrack","perf-cache","perf-dfa","perf-inline","perf-literal","perf-onepass","std","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libregex-79d0bad2b539ec26.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_integer","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["i128","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_integer-4b79c91199530335.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.15","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tokio_util","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["codec","default","io"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtokio_util-93a532d29cc2af49.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#security-framework-sys@2.14.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/security-framework-sys-2.14.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"security_framework_sys","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/security-framework-sys-2.14.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["OSX_10_10","OSX_10_11","OSX_10_12","OSX_10_9","default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsecurity_framework_sys-fa18558eed070c63.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#try-lock@0.2.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/try-lock-0.2.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"try_lock","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/try-lock-0.2.5/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtry_lock-3f510bd7fad588ce.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"shlex","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.3.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libshlex-33c57620f4294e8b.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libshlex-33c57620f4294e8b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/atomic-waker-1.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"atomic_waker","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/atomic-waker-1.1.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libatomic_waker-3adbf1953bf065ca.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-service-0.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tower_service","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-service-0.3.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtower_service-9e9f490b190faeb5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14/build.rs","edition":"2015","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/native-tls-a625d28e5a2817fa/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#cc@1.2.27","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.27/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"cc","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.27/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcc-8148cc57f4ae2f64.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcc-8148cc57f4ae2f64.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#h2@0.4.10","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/h2-0.4.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"h2","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/h2-0.4.10/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libh2-02f14cc1d0501fc5.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/native-tls-3ea312effb5144a7/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#want@0.3.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/want-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"want","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/want-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libwant-a0748ff8d7724643.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#security-framework@2.11.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/security-framework-2.11.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"security_framework","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/security-framework-2.11.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["OSX_10_10","OSX_10_11","OSX_10_12","OSX_10_9","default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsecurity_framework-a2e78f8ef4b8efe6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#const-random-macro@0.1.16","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/const-random-macro-0.1.16/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"const_random_macro","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/const-random-macro-0.1.16/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libconst_random_macro-6532a8c9e3e0b482.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#idna_adapter@1.2.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna_adapter-1.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"idna_adapter","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna_adapter-1.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["compiled_data"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libidna_adapter-53677392ffa8da8e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"httparse","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhttparse-ebc9b3afd3fecf3c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.6.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-sys-0.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"system_configuration_sys","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-sys-0.6.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsystem_configuration_sys-618d08f70f6ff838.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pest_meta@2.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest_meta-2.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pest_meta","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest_meta-2.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpest_meta-cb2bdc26b484aafc.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpest_meta-cb2bdc26b484aafc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"form_urlencoded","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libform_urlencoded-9a6bee17939c038c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-channel-0.3.31/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"futures_channel","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-channel-0.3.31/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","futures-sink","sink","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfutures_channel-4dd475ce892a1d47.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ref-cast@1.0.24","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ref-cast-1.0.24/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ref-cast-1.0.24/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/ref-cast-c3a2d5d37dbc52f2/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.25","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/zerocopy-986203ca3a17f680/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/version_check-0.9.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"version_check","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/version_check-0.9.5/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libversion_check-a8c0acfa89d21fed.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libversion_check-a8c0acfa89d21fed.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.32","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkg-config-0.3.32/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pkg_config","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkg-config-0.3.32/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpkg_config-d48d1141b8fbe1d3.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpkg_config-d48d1141b8fbe1d3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"lazy_static","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liblazy_static-4e46b57b36d7cb79.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8_iter-1.0.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"utf8_iter","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8_iter-1.0.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libutf8_iter-418699fa3d10ed01.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#vcpkg@0.2.15","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vcpkg-0.2.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"vcpkg","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vcpkg-0.2.15/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libvcpkg-9587ab4e4165ea22.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libvcpkg-9587ab4e4165ea22.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#utf8parse@0.2.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8parse-0.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"utf8parse","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8parse-0.2.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libutf8parse-0ad343fc5386a469.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","getrandom","runtime-rng","serde","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/ahash-81aac68ee3f95bae/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-1.0.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"idna","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-1.0.3/src/lib.rs","edition":"2018","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","compiled_data","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libidna-859301ef12da942a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsqlite3-sys@0.33.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsqlite3-sys-0.33.0/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsqlite3-sys-0.33.0/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bundled","bundled_bindings","cc","default","min_sqlite_version_3_14_0","pkg-config","vcpkg"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/libsqlite3-sys-d14811da937ab777/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anstyle-parse@0.2.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-parse-0.2.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anstyle_parse","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-parse-0.2.7/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","utf8"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libanstyle_parse-604a4681cefdd8bc.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.25","linked_libs":[],"linked_paths":[],"cfgs":["zerocopy_aarch64_simd_1_59_0","zerocopy_core_error_1_81_0","zerocopy_diagnostic_on_unimplemented_1_78_0","zerocopy_generic_bounds_in_const_fn_1_61_0","zerocopy_panic_in_const_and_vec_try_reserve_1_57_0","zerocopy_target_has_atomics_1_60_0"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/zerocopy-0520959878a15c87/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#ref-cast@1.0.24","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/ref-cast-5dd139a4fb5f48d8/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hyper@1.6.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-1.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hyper","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-1.6.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["client","default","http1","http2"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhyper-00e605ce25d146fc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pest_generator@2.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest_generator-2.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pest_generator","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest_generator-2.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpest_generator-d2eb83b98fd25bbe.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpest_generator-d2eb83b98fd25bbe.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#system-configuration@0.6.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-0.6.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"system_configuration","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/system-configuration-0.6.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsystem_configuration-5ae54a93f86fe869.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#const-random@0.1.18","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/const-random-0.1.18/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"const_random","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/const-random-0.1.18/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libconst_random-31d7ccb9940db950.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"native_tls","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnative_tls-6d2a440893039ec5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_bigint","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_bigint-067f9db6d646e90a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.12","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-2.0.12/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libthiserror-8a4bb59b86e7f76e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#uuid@1.17.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uuid-1.17.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"uuid","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uuid-1.17.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","rng","serde","std","v4"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libuuid-431cd29a6100130e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@1.0.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sync_wrapper-1.0.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sync_wrapper","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sync_wrapper-1.0.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["futures","futures-core"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsync_wrapper-9be474db3802d670.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hashlink@0.10.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashlink-0.10.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashlink","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashlink-0.10.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhashlink-8d4110540539b462.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ref-cast-impl@1.0.24","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ref-cast-impl-1.0.24/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"ref_cast_impl","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ref-cast-impl-1.0.24/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libref_cast_impl-22b855eabad86f2f.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.35","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"encoding_rs","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libencoding_rs-05df8e679b04c630.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anstyle-query@1.1.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-query-1.1.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anstyle_query","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-query-1.1.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libanstyle_query-002d7b55f2a7e3e6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zeroize","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libzeroize-33d81f09978cde06.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anstyle@1.0.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-1.0.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anstyle","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-1.0.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libanstyle-30e1cb4e0bd7c8e1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ucd-trie@0.1.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ucd-trie-0.1.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ucd_trie","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ucd-trie-0.1.7/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libucd_trie-250a9f096bff8e6d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tower-layer@0.3.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-layer-0.3.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tower_layer","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-layer-0.3.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtower_layer-c9c87b5345ddbf32.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.22.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"base64","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.22.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libbase64-4aba5eb7af7b879b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.44","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.44/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.44/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","libc-extra-traits","std","stdio","termios"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/rustix-895dbd70d26e07af/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.6.29","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.6.29/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_syntax","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.6.29/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode","unicode-age","unicode-bool","unicode-case","unicode-gencat","unicode-perl","unicode-script","unicode-segment"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libregex_syntax-31589e1095cf4d40.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/crossbeam-utils-2a00d07780d78d04/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#colorchoice@1.0.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colorchoice-1.0.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"colorchoice","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colorchoice-1.0.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcolorchoice-de1ca6f6ce1bdf1b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ipnet@2.11.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ipnet-2.11.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ipnet","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ipnet-2.11.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libipnet-6392a91dc9f2bd88.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-width@0.2.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-width-0.2.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_width","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-width-0.2.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["cjk","default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libunicode_width-8fd2ba510dbf3f2d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#is_terminal_polyfill@1.70.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/is_terminal_polyfill-1.70.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"is_terminal_polyfill","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/is_terminal_polyfill-1.70.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libis_terminal_polyfill-4212a6c6e8bfe787.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/build.rs","edition":"2021","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/thiserror-e4e7f59e2547e69e/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.1.10","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.1.10/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"regex_automata","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.1.10/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","regex-syntax","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libregex_automata-3d09d2185df0162d.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/thiserror-af3b9d1ef2a9e991/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anstream@0.6.19","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstream-0.6.19/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anstream","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstream-0.6.19/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["auto","default","wincon"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libanstream-91371c7f56a9abc2.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","linked_libs":[],"linked_paths":[],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/crossbeam-utils-0da8b21676be65fc/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.14","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-util-0.1.14/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hyper_util","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-util-0.1.14/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["client","client-legacy","client-proxy","client-proxy-system","default","http1","http2","tokio"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhyper_util-01f0e7bedaedec66.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tower@0.5.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-0.5.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tower","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-0.5.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["__common","futures-core","futures-util","pin-project-lite","sync_wrapper","timeout","tokio","util"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtower-b7bb11174f72f543.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.44","linked_libs":[],"linked_paths":[],"cfgs":["static_assertions","libc","apple","bsd"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/rustix-6ae98b27c6f31d53/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pest@2.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest-2.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pest","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest-2.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","memchr","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpest-4373eb7d98b76e1d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ref-cast@1.0.24","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ref-cast-1.0.24/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ref_cast","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ref-cast-1.0.24/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libref_cast-319339d7ef0d7bbc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-rational-0.4.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_rational","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-rational-0.4.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["num-bigint","num-bigint-std","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_rational-7f2014cc258ebe63.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#dlv-list@0.5.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dlv-list-0.5.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"dlv_list","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dlv-list-0.5.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdlv_list-16311fe9a2d465f2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tokio-native-tls@0.3.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-native-tls-0.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tokio_native_tls","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-native-tls-0.3.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtokio_native_tls-de5e7ea7cf28f618.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pest_derive@2.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest_derive-2.8.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"pest_derive","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pest_derive-2.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpest_derive-5139785b0c2f28cb.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#url@2.5.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.5.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"url","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.5.4/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liburl-b2525b55f3be20b7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.25","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"zerocopy","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["simd"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libzerocopy-d263d1e5329e7ed8.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsqlite3-sys@0.33.0","linked_libs":["static=sqlite3"],"linked_paths":["native=/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/libsqlite3-sys-3e011dadc8c42a20/out"],"cfgs":[],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/libsqlite3-sys-3e011dadc8c42a20/out"}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12","linked_libs":[],"linked_paths":[],"cfgs":["folded_multiply"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/ahash-48e4b5b08e4d0a2d/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-iter@0.1.45","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-iter-0.1.45/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_iter","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-iter-0.1.45/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["i128","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_iter-b9483f1c1a7a398e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#derive_builder_core@0.20.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derive_builder_core-0.20.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"derive_builder_core","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derive_builder_core-0.20.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["lib_has_std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libderive_builder_core-1dcb9690dfef2cfc.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libderive_builder_core-1dcb9690dfef2cfc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-body-util-0.1.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"http_body_util","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-body-util-0.1.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhttp_body_util-6be12ebc044e11b5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-complex@0.4.6","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-complex-0.4.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_complex","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-complex-0.4.6/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_complex-330d3fa7849189a9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#deadpool-runtime@0.1.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deadpool-runtime-0.1.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"deadpool_runtime","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deadpool-runtime-0.1.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["tokio_1"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdeadpool_runtime-4d73bbaff9a90a95.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#iana-time-zone@0.1.63","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/iana-time-zone-0.1.63/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"iana_time_zone","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/iana-time-zone-0.1.63/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["fallback"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libiana_time_zone-71a22e654e1af2d9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_spanned@0.6.9","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_spanned-0.6.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_spanned","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_spanned-0.6.9/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libserde_spanned-5afd651601153041.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_datetime-0.6.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"toml_datetime","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_datetime-0.6.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["serde"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtoml_datetime-4a376b703abb9bc1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.69/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"thiserror_impl","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.69/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libthiserror_impl-0539dfa8ab9bf8f3.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr2@2.0.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-attr2-2.0.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"proc_macro_error_attr2","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error-attr2-2.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libproc_macro_error_attr2-a5f5a96026781346.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#unicode-segmentation@1.12.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-segmentation-1.12.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"unicode_segmentation","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-segmentation-1.12.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libunicode_segmentation-edbbf1eab3bf9339.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#overload@0.1.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/overload-0.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"overload","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/overload-0.1.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liboverload-e12e84a4f68e4b71.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#option-ext@0.2.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/option-ext-0.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"option_ext","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/option-ext-0.2.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liboption_ext-d449eee503ca4ca4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.14.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hashbrown","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.14.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhashbrown-5fe016f29bd5e48f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#toml_write@0.1.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_write-0.1.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"toml_write","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_write-0.1.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtoml_write-cf18f24cceacdfb9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#winnow@0.7.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/winnow-0.7.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"winnow","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/winnow-0.7.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libwinnow-97f50b7c864693bd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bit-vec@0.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bit-vec-0.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bit_vec","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bit-vec-0.8.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libbit_vec-48cf33caf7f7ebc9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#borrow-or-share@0.2.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borrow-or-share-0.2.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"borrow_or_share","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borrow-or-share-0.2.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libborrow_or_share-a15674a67a4521b8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#iri-string@0.7.8","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/iri-string-0.7.8/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"iri_string","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/iri-string-0.7.8/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libiri_string-81d8ddd31f111528.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.1/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.1/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","fallback"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/portable-atomic-08c16bf93703eb60/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/powerfmt-0.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"powerfmt","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/powerfmt-0.2.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpowerfmt-4fb48125f778b05d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tower-http@0.6.6","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-http-0.6.6/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tower_http","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-http-0.6.6/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["follow-redirect","futures-util","iri-string","tower"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtower_http-83791c919562eb41.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fluent-uri@0.3.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fluent-uri-0.3.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fluent_uri","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fluent-uri-0.3.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","serde","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfluent_uri-585c4feca3be71a1.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bit-set@0.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bit-set-0.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bit_set","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bit-set-0.8.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libbit_set-b6dff5f4cb37496d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#deranged@0.4.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deranged-0.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"deranged","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deranged-0.4.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","powerfmt","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libderanged-a4330ee2dd5d2252.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.1","linked_libs":[],"linked_paths":[],"cfgs":["portable_atomic_pre_llvm_20"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/portable-atomic-a1a90b5653fa6ff7/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.22.27","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_edit-0.22.27/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"toml_edit","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml_edit-0.22.27/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["display","parse","serde"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtoml_edit-046238535a282c4b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#dirs-sys@0.5.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dirs-sys-0.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"dirs_sys","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dirs-sys-0.5.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdirs_sys-4b0fc6c8da42a0ff.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ordered-multimap@0.7.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ordered-multimap-0.7.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ordered_multimap","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ordered-multimap-0.7.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libordered_multimap-b9de72d97f9bc2e3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thiserror","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libthiserror-7e827f8ec25ffd75.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#proc-macro-error2@2.0.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error2-2.0.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"proc_macro_error2","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro-error2-2.0.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","syn-error"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libproc_macro_error2-84bfb8c430dc30e4.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libproc_macro_error2-84bfb8c430dc30e4.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#nu-ansi-term@0.46.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nu-ansi-term-0.46.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"nu_ansi_term","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nu-ansi-term-0.46.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnu_ansi_term-943f19fba74778e2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"chrono","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/chrono-0.4.41/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","android-tzdata","clock","default","iana-time-zone","js-sys","now","oldtime","serde","std","wasm-bindgen","wasmbind","winapi","windows-link"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libchrono-c86ea153c9dbe1e3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num@0.4.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-0.4.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-0.4.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["num-bigint","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum-a9e7fb73b3b1faf6.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#hyper-tls@0.6.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-tls-0.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"hyper_tls","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-tls-0.6.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhyper_tls-f2754eed3c51dbc7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#derive_builder_macro@0.20.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derive_builder_macro-0.20.2/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"derive_builder_macro","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derive_builder_macro-0.20.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["lib_has_std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libderive_builder_macro-56dcea97f4836f18.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#libsqlite3-sys@0.33.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsqlite3-sys-0.33.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"libsqlite3_sys","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libsqlite3-sys-0.33.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bundled","bundled_bindings","cc","default","min_sqlite_version_3_14_0","pkg-config","vcpkg"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liblibsqlite3_sys-ce1b593e6db56ed3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ahash","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","getrandom","runtime-rng","serde","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libahash-4bcfca27639e4c8b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustix@0.38.44","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.44/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustix","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustix-0.38.44/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","libc-extra-traits","std","stdio","termios"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/librustix-ad11cd33522bac4f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_utils","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcrossbeam_utils-bbf41844a8450820.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#matchers@0.1.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matchers-0.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"matchers","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matchers-0.1.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libmatchers-b7cd037c463a4f89.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#console@0.15.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/console-0.15.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"console","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/console-0.15.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["ansi-parsing","default","unicode-width"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libconsole-7247fd022e16f356.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.12.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pki-types-1.12.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rustls_pki_types","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pki-types-1.12.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/librustls_pki_types-7a22e4ecb8ac66cb.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#sharded-slab@0.1.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"sharded_slab","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libsharded_slab-ac0f5c096c4bffef.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_urlencoded-0.7.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"serde_urlencoded","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_urlencoded-0.7.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":false},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libserde_urlencoded-637ade676197917b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tracing-log@0.2.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-log-0.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing_log","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-log-0.2.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["log-tracer","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtracing_log-e12218575332b30c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tracing-serde@0.2.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-serde-0.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing_serde","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-serde-0.2.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtracing_serde-854f891df8759c59.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num_cpus@1.17.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_cpus-1.17.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_cpus","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_cpus-1.17.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_cpus-3f74904a9ef0c013.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#thread_local@1.1.9","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thread_local-1.1.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"thread_local","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thread_local-1.1.9/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libthread_local-6b7a49ffbb503b05.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#vsimd@0.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vsimd-0.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"vsimd","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vsimd-0.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","detect","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libvsimd-53a48360058c8d1f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fallible-iterator@0.3.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fallible-iterator-0.3.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fallible_iterator","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fallible-iterator-0.3.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfallible_iterator-cca4f5450215ba71.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#outref@0.5.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/outref-0.5.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"outref","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/outref-0.5.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/liboutref-960ffc61d031469b.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fallible-streaming-iterator@0.1.9","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fallible-streaming-iterator-0.1.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fallible_streaming_iterator","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fallible-streaming-iterator-0.1.9/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfallible_streaming_iterator-a68cf6c8f866ead3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#arraydeque@0.5.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arraydeque-0.5.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"arraydeque","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arraydeque-0.5.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libarraydeque-7945b10f2c9de898.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-modular@0.6.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-modular-0.6.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_modular","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-modular-0.6.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_modular-30a93aef4d0a372f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-core-0.1.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"time_core","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-core-0.1.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtime_core-825c9004f0ef90a3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#trim-in-place@0.1.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/trim-in-place-0.1.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"trim_in_place","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/trim-in-place-0.1.7/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtrim_in_place-13456fb2fa5f378d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.98","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/Cargo.toml","target":{"kind":["custom-build"],"crate_types":["bin"],"name":"build-script-build","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/build.rs","edition":"2018","doc":false,"doctest":false,"test":false},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/anyhow-3a32be47b1875c6f/build-script-build"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.7/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"base64","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.7/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libbase64-f47fd5ff5754cbaf.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime-0.3.17/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"mime","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime-0.3.17/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libmime-9788869138080acd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#clap_lex@0.7.5","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_lex-0.7.5/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"clap_lex","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_lex-0.7.5/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libclap_lex-5c77e3c7d9af1952.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/heck-0.5.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"heck","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/heck-0.5.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libheck-c7202626dcc2bd7f.rlib","/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libheck-c7202626dcc2bd7f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-conv-0.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_conv","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-conv-0.1.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_conv-8dc301b7bfcb507c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strsim-0.11.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"strsim","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strsim-0.11.1/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libstrsim-f7d3f80ce0e1b6e7.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#time@0.3.41","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-0.3.41/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"time","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-0.3.41/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","formatting","parsing","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtime-816158dc6838ffd5.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#clap_builder@4.5.40","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.40/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"clap_builder","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.40/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["color","env","error-context","help","std","suggestions","usage"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libclap_builder-b396bf2f1bf7c9fe.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#clap_derive@4.5.40","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_derive-4.5.40/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"clap_derive","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_derive-4.5.40/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libclap_derive-1858a4518a5a8c38.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#reqwest@0.12.20","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/reqwest-0.12.20/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"reqwest","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/reqwest-0.12.20/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["__tls","blocking","charset","default","default-tls","h2","http2","json","system-proxy"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libreqwest-15adf06c047b1f09.rmeta"],"executable":null,"fresh":true}
{"reason":"build-script-executed","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.98","linked_libs":[],"linked_paths":[],"cfgs":["std_backtrace"],"env":[],"out_dir":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/build/anyhow-e412901a144cae8b/out"}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rust-ini@0.21.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rust-ini-0.21.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ini","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rust-ini-0.21.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libini-2f8c5ec537089ec8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#ron@0.8.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ron-0.8.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"ron","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ron-0.8.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libron-9b5cf61e4a9f0d33.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#rusqlite@0.35.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusqlite-0.35.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"rusqlite","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusqlite-0.35.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["bundled","chrono","modern_sqlite","uuid"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/librusqlite-c6f2cd0e2972137e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-order@1.2.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-order-1.2.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_order","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-order-1.2.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_order-f7670376cebf110e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#yaml-rust2@0.10.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yaml-rust2-0.10.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"yaml_rust2","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yaml-rust2-0.10.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","encoding"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libyaml_rust2-bb4a92d19675243d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#uuid-simd@0.8.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uuid-simd-0.8.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"uuid_simd","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uuid-simd-0.8.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","default","detect","std","uuid"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libuuid_simd-85245f8c98de4acd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tracing-subscriber@0.3.19","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-subscriber-0.3.19/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing_subscriber","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-subscriber-0.3.19/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","ansi","default","env-filter","fmt","json","matchers","nu-ansi-term","once_cell","regex","registry","serde","serde_json","sharded-slab","smallvec","std","thread_local","tracing","tracing-log","tracing-serde"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtracing_subscriber-ba89dad21d7ae9bc.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#deadpool@0.12.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deadpool-0.12.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"deadpool","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deadpool-0.12.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","managed","rt_tokio_1","unmanaged"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdeadpool-1c90ae593b7e839c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossterm@0.28.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossterm-0.28.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossterm","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossterm-0.28.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcrossterm-15e6197586756558.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#crossbeam-channel@0.5.15","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-channel-0.5.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"crossbeam_channel","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-channel-0.5.15/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcrossbeam_channel-1c71ee2b0d50d104.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#referencing@0.30.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/referencing-0.30.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"referencing","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/referencing-0.30.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libreferencing-6f2ed349de0fc17d.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#derive_builder@0.20.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derive_builder-0.20.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"derive_builder","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/derive_builder-0.20.2/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libderive_builder-47a28e51f37da1aa.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fraction@0.15.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fraction-0.15.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fraction","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fraction-0.15.3/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["lazy_static","with-bigint"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfraction-6a07d3213561af84.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#validator_derive@0.20.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/validator_derive-0.20.0/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"validator_derive","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/validator_derive-0.20.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libvalidator_derive-3dcd3e3113c27b32.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#dirs@6.0.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dirs-6.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"dirs","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dirs-6.0.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdirs-0401eb81d5b590c9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#toml@0.8.23","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml-0.8.23/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"toml","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/toml-0.8.23/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","display","parse"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtoml-4480bbe5b956af09.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"portable_atomic","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","fallback"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libportable_atomic-fc22d4a8c360f5dd.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#fancy-regex@0.14.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fancy-regex-0.14.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"fancy_regex","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fancy-regex-0.14.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","perf","std","unicode"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libfancy_regex-f6cd63f2e7c74307.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#convert_case@0.6.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/convert_case-0.6.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"convert_case","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/convert_case-0.6.0/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libconvert_case-48f9c38a55f476e8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#deadpool-sync@0.1.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deadpool-sync-0.1.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"deadpool_sync","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deadpool-sync-0.1.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdeadpool_sync-356e8e605ae2ab13.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#json5@0.4.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/json5-0.4.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"json5","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/json5-0.4.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libjson5-d8c4ff80d783eb93.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#env_filter@0.1.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_filter-0.1.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"env_filter","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_filter-0.1.3/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["regex"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libenv_filter-0522095812778f20.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#email_address@0.2.9","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/email_address-0.2.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"email_address","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/email_address-0.2.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","serde","serde_support"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libemail_address-7a83c04616be8036.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/Cargo.toml","target":{"kind":["proc-macro"],"crate_types":["proc-macro"],"name":"async_trait","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":0,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libasync_trait-5765eb87ea41cfd4.dylib"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#csv-core@0.1.12","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csv-core-0.1.12/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"csv_core","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csv-core-0.1.12/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcsv_core-f30ac65c09c3459c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#bytecount@0.6.9","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytecount-0.6.9/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"bytecount","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytecount-0.6.9/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["runtime-dispatch-simd"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libbytecount-a039d5ac7ff2cec9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#jiff@0.2.15","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jiff-0.2.15/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"jiff","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jiff-0.2.15/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["alloc","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libjiff-22c718d176571bed.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#number_prefix@0.4.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/number_prefix-0.4.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"number_prefix","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/number_prefix-0.4.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnumber_prefix-1f2cb326cad0e84a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#shell-words@1.1.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shell-words-1.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"shell_words","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shell-words-1.1.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libshell_words-ebbedfcbe4a17e20.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#pathdiff@0.2.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pathdiff-0.2.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"pathdiff","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pathdiff-0.2.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libpathdiff-8d1bf0d5f740b13a.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#num-cmp@0.1.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-cmp-0.1.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"num_cmp","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-cmp-0.1.0/src/lib.rs","edition":"2015","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libnum_cmp-15259996c57aa566.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#indicatif@0.17.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indicatif-0.17.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"indicatif","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indicatif-0.17.11/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","unicode-width"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libindicatif-ef40da57bc7eca7e.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#dialoguer@0.11.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dialoguer-0.11.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"dialoguer","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dialoguer-0.11.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","editor","password","tempfile","zeroize"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdialoguer-cb035e802b7bcb0f.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#jsonschema@0.30.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jsonschema-0.30.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"jsonschema","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jsonschema-0.30.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","reqwest","resolve-file","resolve-http"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libjsonschema-ffdf651e2a8298e3.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#config@0.15.11","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/config-0.15.11/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"config","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/config-0.15.11/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["async","async-trait","convert-case","convert_case","default","ini","json","json5","json5_rs","ron","rust-ini","serde_json","toml","yaml","yaml-rust2"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libconfig-b9665eef166e69b8.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#csv@1.3.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csv-1.3.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"csv","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/csv-1.3.1/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcsv-25afd16738c04672.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#env_logger@0.11.8","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_logger-0.11.8/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"env_logger","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_logger-0.11.8/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["auto-color","color","default","humantime","regex"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libenv_logger-02ad46b9500e7834.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#deadpool-sqlite@0.11.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deadpool-sqlite-0.11.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"deadpool_sqlite","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deadpool-sqlite-0.11.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","rt_tokio_1"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libdeadpool_sqlite-c909587661fbb4ed.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#shellexpand@3.1.1","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shellexpand-3.1.1/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"shellexpand","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shellexpand-3.1.1/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["base-0","default","dirs","tilde"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libshellexpand-d91cadb9c293faf9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#validator@0.20.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/validator-0.20.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"validator","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/validator-0.20.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["derive","validator_derive"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libvalidator-d17940f534df3196.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#handlebars@6.3.2","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/handlebars-6.3.2/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"handlebars","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/handlebars-6.3.2/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libhandlebars-35df28fb7e3e1cd9.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#tracing-appender@0.2.3","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-appender-0.2.3/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"tracing_appender","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-appender-0.2.3/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libtracing_appender-d117cad624795601.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#comfy-table@7.1.4","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/comfy-table-7.1.4/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"comfy_table","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/comfy-table-7.1.4/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","tty"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcomfy_table-2fe1da4cba48ebf2.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.98","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"anyhow","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/src/lib.rs","edition":"2018","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["default","std"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libanyhow-e78fb15820dbad9c.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#clap@4.5.40","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap-4.5.40/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"clap","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap-4.5.40/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":["color","default","derive","env","error-context","help","std","suggestions","usage"],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libclap-bed06c0dbcb5bf06.rmeta"],"executable":null,"fresh":true}
{"reason":"compiler-artifact","package_id":"registry+https://github.com/rust-lang/crates.io-index#colored@3.0.0","manifest_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colored-3.0.0/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"colored","src_path":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colored-3.0.0/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/target/debug/deps/libcolored-7fe267b787d49bec.rmeta"],"executable":null,"fresh":true}
    Checking llmdocs v0.1.0 (/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc)
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0412]: cannot find type `MarkdownMigrator` in this scope\n  --> src/migration/sprints.rs:20:6\n   |\n20 | impl MarkdownMigrator {\n   |      ^^^^^^^^^^^^^^^^ not found in this scope\n   |\nhelp: consider importing this struct through its public re-export\n   |\n3  + use crate::MarkdownMigrator;\n   |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider importing this struct through its public re-export","rendered":null,"spans":[{"byte_end":36,"byte_start":36,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":"use crate::MarkdownMigrator;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use crate::{"}]}]}],"code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","message":"cannot find type `MarkdownMigrator` in this scope","spans":[{"byte_end":448,"byte_start":432,"column_end":22,"column_start":6,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":"not found in this scope","line_end":20,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":6,"text":"impl MarkdownMigrator {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `task_service::TaskService`\n --> src/migration/tasks.rs:9:9\n  |\n9 |         task_service::TaskService,\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_imports)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":180,"byte_start":122,"column_end":6,"column_start":6,"expansion":null,"file_name":"src/migration/tasks.rs","is_primary":true,"label":null,"line_end":10,"line_start":7,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":7,"highlight_start":6,"text":"    },"},{"highlight_end":16,"highlight_start":1,"text":"    services::{"},{"highlight_end":35,"highlight_start":1,"text":"        task_service::TaskService,"},{"highlight_end":6,"highlight_start":1,"text":"    },"}]},{"byte_end":51,"byte_start":45,"column_end":5,"column_start":12,"expansion":null,"file_name":"src/migration/tasks.rs","is_primary":true,"label":null,"line_end":4,"line_start":3,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":12,"text":"use crate::{"},{"highlight_end":5,"highlight_start":1,"text":"    core::{"}]},{"byte_end":183,"byte_start":180,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/migration/tasks.rs","is_primary":true,"label":null,"line_end":11,"line_start":10,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":7,"highlight_start":6,"text":"    },"},{"highlight_end":2,"highlight_start":1,"text":"};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `task_service::TaskService`","spans":[{"byte_end":173,"byte_start":148,"column_end":34,"column_start":9,"expansion":null,"file_name":"src/migration/tasks.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":9,"text":"        task_service::TaskService,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `Retrospective` and `database::DbConnection`\n --> src/migration/sprints.rs:5:9\n  |\n5 |         database::DbConnection,\n  |         ^^^^^^^^^^^^^^^^^^^^^^\n6 |         models::{Sprint, SprintStatus, Retrospective},\n  |                                        ^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused imports","rendered":null,"spans":[{"byte_end":101,"byte_start":69,"column_end":9,"column_start":9,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":6,"line_start":5,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":9,"text":"        database::DbConnection,"},{"highlight_end":9,"highlight_start":1,"text":"        models::{Sprint, SprintStatus, Retrospective},"}]},{"byte_end":145,"byte_start":130,"column_end":53,"column_start":38,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":6,"line_start":6,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":53,"highlight_start":38,"text":"        models::{Sprint, SprintStatus, Retrospective},"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `Retrospective` and `database::DbConnection`","spans":[{"byte_end":91,"byte_start":69,"column_end":31,"column_start":9,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":5,"line_start":5,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":9,"text":"        database::DbConnection,"}]},{"byte_end":145,"byte_start":132,"column_end":53,"column_start":40,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":6,"line_start":6,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":40,"text":"        models::{Sprint, SprintStatus, Retrospective},"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `PathBuf`\n  --> src/migration/sprints.rs:16:23\n   |\n16 | use std::path::{Path, PathBuf};\n   |                       ^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":388,"byte_start":379,"column_end":30,"column_start":21,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":16,"line_start":16,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":30,"highlight_start":21,"text":"use std::path::{Path, PathBuf};"}]},{"byte_end":375,"byte_start":374,"column_end":17,"column_start":16,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":16,"line_start":16,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":17,"highlight_start":16,"text":"use std::path::{Path, PathBuf};"}]},{"byte_end":389,"byte_start":388,"column_end":31,"column_start":30,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":16,"line_start":16,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":30,"text":"use std::path::{Path, PathBuf};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `PathBuf`","spans":[{"byte_end":388,"byte_start":381,"column_end":30,"column_start":23,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":16,"line_start":16,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":23,"text":"use std::path::{Path, PathBuf};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `debug` and `info`\n  --> src/migration/sprints.rs:18:15\n   |\n18 | use tracing::{debug, info, warn};\n   |               ^^^^^  ^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused imports","rendered":null,"spans":[{"byte_end":419,"byte_start":406,"column_end":28,"column_start":15,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":18,"line_start":18,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":28,"highlight_start":15,"text":"use tracing::{debug, info, warn};"}]},{"byte_end":406,"byte_start":405,"column_end":15,"column_start":14,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":18,"line_start":18,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":15,"highlight_start":14,"text":"use tracing::{debug, info, warn};"}]},{"byte_end":424,"byte_start":423,"column_end":33,"column_start":32,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":18,"line_start":18,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":33,"highlight_start":32,"text":"use tracing::{debug, info, warn};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `debug` and `info`","spans":[{"byte_end":411,"byte_start":406,"column_end":20,"column_start":15,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":18,"line_start":18,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":15,"text":"use tracing::{debug, info, warn};"}]},{"byte_end":417,"byte_start":413,"column_end":26,"column_start":22,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":null,"line_end":18,"line_start":18,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":22,"text":"use tracing::{debug, info, warn};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `database::DbConnection` and `errors`\n --> src/migration/components.rs:5:9\n  |\n5 |         database::DbConnection,\n  |         ^^^^^^^^^^^^^^^^^^^^^^\n6 |         models::{Component, ComponentType},\n7 |         errors, // Import the errors module\n  |         ^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused imports","rendered":null,"spans":[{"byte_end":104,"byte_start":72,"column_end":9,"column_start":9,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":6,"line_start":5,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":9,"text":"        database::DbConnection,"},{"highlight_end":9,"highlight_start":1,"text":"        models::{Component, ComponentType},"}]},{"byte_end":154,"byte_start":138,"column_end":15,"column_start":43,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":7,"line_start":6,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":43,"text":"        models::{Component, ComponentType},"},{"highlight_end":15,"highlight_start":1,"text":"        errors, // Import the errors module"}]},{"byte_end":72,"byte_start":62,"column_end":9,"column_start":11,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":5,"line_start":4,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":12,"highlight_start":11,"text":"    core::{"},{"highlight_end":9,"highlight_start":1,"text":"        database::DbConnection,"}]},{"byte_end":189,"byte_start":154,"column_end":6,"column_start":15,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":8,"line_start":7,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":44,"highlight_start":15,"text":"        errors, // Import the errors module"},{"highlight_end":6,"highlight_start":1,"text":"    },"}]},{"byte_end":56,"byte_start":50,"column_end":5,"column_start":12,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":4,"line_start":3,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":12,"text":"use crate::{"},{"highlight_end":5,"highlight_start":1,"text":"    core::{"}]},{"byte_end":192,"byte_start":189,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":9,"line_start":8,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":7,"highlight_start":6,"text":"    },"},{"highlight_end":2,"highlight_start":1,"text":"};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `database::DbConnection` and `errors`","spans":[{"byte_end":94,"byte_start":72,"column_end":31,"column_start":9,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":5,"line_start":5,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":9,"text":"        database::DbConnection,"}]},{"byte_end":154,"byte_start":148,"column_end":15,"column_start":9,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":7,"line_start":7,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":9,"text":"        errors, // Import the errors module"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `rusqlite::ToSql`\n  --> src/migration/components.rs:14:5\n   |\n14 | use rusqlite::ToSql; // Import ToSql trait\n   |     ^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":300,"byte_start":280,"column_end":21,"column_start":1,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":21,"highlight_start":1,"text":"use rusqlite::ToSql; // Import ToSql trait"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `rusqlite::ToSql`","spans":[{"byte_end":299,"byte_start":284,"column_end":20,"column_start":5,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":5,"text":"use rusqlite::ToSql; // Import ToSql trait"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `Error`\n --> src/migration/adrs.rs:6:32\n  |\n6 |         errors::{self, Result, Error},\n  |                                ^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":128,"byte_start":121,"column_end":37,"column_start":30,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":6,"line_start":6,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":37,"highlight_start":30,"text":"        errors::{self, Result, Error},"}]},{"byte_end":50,"byte_start":44,"column_end":5,"column_start":12,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":4,"line_start":3,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":12,"text":"use crate::{"},{"highlight_end":5,"highlight_start":1,"text":"    core::{"}]},{"byte_end":139,"byte_start":136,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":8,"line_start":7,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":7,"highlight_start":6,"text":"    },"},{"highlight_end":2,"highlight_start":1,"text":"};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `Error`","spans":[{"byte_end":128,"byte_start":123,"column_end":37,"column_start":32,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":6,"line_start":6,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":32,"text":"        errors::{self, Result, Error},"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `PathBuf` and `Path`\n  --> src/migration/adrs.rs:10:17\n   |\n10 | use std::path::{Path, PathBuf};\n   |                 ^^^^  ^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":191,"byte_start":159,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":11,"line_start":10,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":1,"text":"use std::path::{Path, PathBuf};"},{"highlight_end":1,"highlight_start":1,"text":"use std::sync::Arc;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `PathBuf` and `Path`","spans":[{"byte_end":179,"byte_start":175,"column_end":21,"column_start":17,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":10,"line_start":10,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"use std::path::{Path, PathBuf};"}]},{"byte_end":188,"byte_start":181,"column_end":30,"column_start":23,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":10,"line_start":10,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":23,"text":"use std::path::{Path, PathBuf};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `std::sync::Arc`\n  --> src/migration/adrs.rs:11:5\n   |\n11 | use std::sync::Arc;\n   |     ^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":211,"byte_start":191,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":12,"line_start":11,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":1,"text":"use std::sync::Arc;"},{"highlight_end":1,"highlight_start":1,"text":"use tracing::{info, warn};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `std::sync::Arc`","spans":[{"byte_end":209,"byte_start":195,"column_end":19,"column_start":5,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":11,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":5,"text":"use std::sync::Arc;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `info`\n  --> src/migration/adrs.rs:12:15\n   |\n12 | use tracing::{info, warn};\n   |               ^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":231,"byte_start":225,"column_end":21,"column_start":15,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":21,"highlight_start":15,"text":"use tracing::{info, warn};"}]},{"byte_end":225,"byte_start":224,"column_end":15,"column_start":14,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":15,"highlight_start":14,"text":"use tracing::{info, warn};"}]},{"byte_end":236,"byte_start":235,"column_end":26,"column_start":25,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":26,"highlight_start":25,"text":"use tracing::{info, warn};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `info`","spans":[{"byte_end":229,"byte_start":225,"column_end":19,"column_start":15,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":15,"text":"use tracing::{info, warn};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `rusqlite::ToSql`\n  --> src/migration/adrs.rs:14:5\n   |\n14 | use rusqlite::ToSql; // Import ToSql trait\n   |     ^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":274,"byte_start":254,"column_end":21,"column_start":1,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":21,"highlight_start":1,"text":"use rusqlite::ToSql; // Import ToSql trait"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `rusqlite::ToSql`","spans":[{"byte_end":273,"byte_start":258,"column_end":20,"column_start":5,"expansion":null,"file_name":"src/migration/adrs.rs","is_primary":true,"label":null,"line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":5,"text":"use rusqlite::ToSql; // Import ToSql trait"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `database::DbConnection`\n --> src/migration/user_stories.rs:5:9\n  |\n5 |         database::DbConnection,\n  |         ^^^^^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":106,"byte_start":74,"column_end":9,"column_start":9,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":6,"line_start":5,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":9,"text":"        database::DbConnection,"},{"highlight_end":9,"highlight_start":1,"text":"        models::{UserStory, Priority},"}]},{"byte_end":58,"byte_start":52,"column_end":5,"column_start":12,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":4,"line_start":3,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":12,"text":"use crate::{"},{"highlight_end":5,"highlight_start":1,"text":"    core::{"}]},{"byte_end":184,"byte_start":181,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":9,"line_start":8,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":7,"highlight_start":6,"text":"    },"},{"highlight_end":2,"highlight_start":1,"text":"};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `database::DbConnection`","spans":[{"byte_end":96,"byte_start":74,"column_end":31,"column_start":9,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":5,"line_start":5,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":9,"text":"        database::DbConnection,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `PathBuf` and `Path`\n  --> src/migration/user_stories.rs:11:17\n   |\n11 | use std::path::{Path, PathBuf};\n   |                 ^^^^  ^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":236,"byte_start":204,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":12,"line_start":11,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":32,"highlight_start":1,"text":"use std::path::{Path, PathBuf};"},{"highlight_end":1,"highlight_start":1,"text":"use std::sync::Arc;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `PathBuf` and `Path`","spans":[{"byte_end":224,"byte_start":220,"column_end":21,"column_start":17,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":11,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"use std::path::{Path, PathBuf};"}]},{"byte_end":233,"byte_start":226,"column_end":30,"column_start":23,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":11,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":23,"text":"use std::path::{Path, PathBuf};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `std::sync::Arc`\n  --> src/migration/user_stories.rs:12:5\n   |\n12 | use std::sync::Arc;\n   |     ^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":256,"byte_start":236,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":13,"line_start":12,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":20,"highlight_start":1,"text":"use std::sync::Arc;"},{"highlight_end":1,"highlight_start":1,"text":"use tracing::{info, warn};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `std::sync::Arc`","spans":[{"byte_end":254,"byte_start":240,"column_end":19,"column_start":5,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":5,"text":"use std::sync::Arc;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `info`\n  --> src/migration/user_stories.rs:13:15\n   |\n13 | use tracing::{info, warn};\n   |               ^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":276,"byte_start":270,"column_end":21,"column_start":15,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":21,"highlight_start":15,"text":"use tracing::{info, warn};"}]},{"byte_end":270,"byte_start":269,"column_end":15,"column_start":14,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":15,"highlight_start":14,"text":"use tracing::{info, warn};"}]},{"byte_end":281,"byte_start":280,"column_end":26,"column_start":25,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":26,"highlight_start":25,"text":"use tracing::{info, warn};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `info`","spans":[{"byte_end":274,"byte_start":270,"column_end":19,"column_start":15,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":19,"highlight_start":15,"text":"use tracing::{info, warn};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `rusqlite::ToSql`\n  --> src/migration/user_stories.rs:15:5\n   |\n15 | use rusqlite::ToSql; // Import ToSql trait\n   |     ^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":319,"byte_start":299,"column_end":21,"column_start":1,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":15,"line_start":15,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":21,"highlight_start":1,"text":"use rusqlite::ToSql; // Import ToSql trait"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `rusqlite::ToSql`","spans":[{"byte_end":318,"byte_start":303,"column_end":20,"column_start":5,"expansion":null,"file_name":"src/migration/user_stories.rs","is_primary":true,"label":null,"line_end":15,"line_start":15,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":5,"text":"use rusqlite::ToSql; // Import ToSql trait"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `AdrStatus`, `Adr`, `ComponentType`, `Component`, `Error`, `Priority`, `SprintServiceTrait`, `SprintService`, `SprintStatus`, `Sprint`, `TaskServiceTrait`, `TaskService`, `Task`, `UserStory`, and `self`\n  --> src/migration/mod.rs:12:18\n   |\n12 |         models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},\n   |                  ^^^^  ^^^^^^  ^^^^^^^^^  ^^^  ^^^^^^^^^                        ^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^\n13 |         errors::{self, Result, Error},\n   |                  ^^^^          ^^^^^\n...\n16 |         task_service::{TaskService, TaskServiceTrait},\n   |                        ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^\n17 |         sprint_service::{SprintService, SprintServiceTrait},\n   |                          ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused imports","rendered":null,"spans":[{"byte_end":236,"byte_start":195,"column_end":59,"column_start":18,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":59,"highlight_start":18,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":306,"byte_start":256,"column_end":129,"column_start":79,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":129,"highlight_start":79,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":332,"byte_start":326,"column_end":24,"column_start":18,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":24,"highlight_start":18,"text":"        errors::{self, Result, Error},"}]},{"byte_end":345,"byte_start":338,"column_end":37,"column_start":30,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":37,"highlight_start":30,"text":"        errors::{self, Result, Error},"}]},{"byte_end":492,"byte_start":353,"column_end":6,"column_start":6,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":18,"line_start":14,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":7,"highlight_start":6,"text":"    },"},{"highlight_end":16,"highlight_start":1,"text":"    services::{"},{"highlight_end":55,"highlight_start":1,"text":"        task_service::{TaskService, TaskServiceTrait},"},{"highlight_end":61,"highlight_start":1,"text":"        sprint_service::{SprintService, SprintServiceTrait},"},{"highlight_end":6,"highlight_start":1,"text":"    },"}]},{"byte_end":138,"byte_start":132,"column_end":5,"column_start":12,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":10,"line_start":9,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":13,"highlight_start":12,"text":"use crate::{"},{"highlight_end":5,"highlight_start":1,"text":"    core::{"}]},{"byte_end":495,"byte_start":492,"column_end":2,"column_start":6,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":19,"line_start":18,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":7,"highlight_start":6,"text":"    },"},{"highlight_end":2,"highlight_start":1,"text":"};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `AdrStatus`, `Adr`, `ComponentType`, `Component`, `Error`, `Priority`, `SprintServiceTrait`, `SprintService`, `SprintStatus`, `Sprint`, `TaskServiceTrait`, `TaskService`, `Task`, `UserStory`, and `self`","spans":[{"byte_end":199,"byte_start":195,"column_end":22,"column_start":18,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":18,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":207,"byte_start":201,"column_end":30,"column_start":24,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":24,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":218,"byte_start":209,"column_end":41,"column_start":32,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":32,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":223,"byte_start":220,"column_end":46,"column_start":43,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":43,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":234,"byte_start":225,"column_end":57,"column_start":48,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":57,"highlight_start":48,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":270,"byte_start":258,"column_end":93,"column_start":81,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":93,"highlight_start":81,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":285,"byte_start":272,"column_end":108,"column_start":95,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":108,"highlight_start":95,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":296,"byte_start":287,"column_end":119,"column_start":110,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":119,"highlight_start":110,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":306,"byte_start":298,"column_end":129,"column_start":121,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":129,"highlight_start":121,"text":"        models::{Task, Sprint, Component, Adr, UserStory, TaskType, TaskStatus, SprintStatus, ComponentType, AdrStatus, Priority},"}]},{"byte_end":330,"byte_start":326,"column_end":22,"column_start":18,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":18,"text":"        errors::{self, Result, Error},"}]},{"byte_end":345,"byte_start":340,"column_end":37,"column_start":32,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":32,"text":"        errors::{self, Result, Error},"}]},{"byte_end":405,"byte_start":394,"column_end":35,"column_start":24,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":16,"line_start":16,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":24,"text":"        task_service::{TaskService, TaskServiceTrait},"}]},{"byte_end":423,"byte_start":407,"column_end":53,"column_start":37,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":16,"line_start":16,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":37,"text":"        task_service::{TaskService, TaskServiceTrait},"}]},{"byte_end":464,"byte_start":451,"column_end":39,"column_start":26,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":17,"line_start":17,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":39,"highlight_start":26,"text":"        sprint_service::{SprintService, SprintServiceTrait},"}]},{"byte_end":484,"byte_start":466,"column_end":59,"column_start":41,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":17,"line_start":17,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":59,"highlight_start":41,"text":"        sprint_service::{SprintService, SprintServiceTrait},"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `DateTime`, `NaiveDate`, and `Utc`\n  --> src/migration/mod.rs:20:14\n   |\n20 | use chrono::{DateTime, NaiveDate, Utc};\n   |              ^^^^^^^^  ^^^^^^^^^  ^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":537,"byte_start":497,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":21,"line_start":20,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":40,"highlight_start":1,"text":"use chrono::{DateTime, NaiveDate, Utc};"},{"highlight_end":1,"highlight_start":1,"text":"use indicatif::{ProgressBar, ProgressStyle};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `DateTime`, `NaiveDate`, and `Utc`","spans":[{"byte_end":518,"byte_start":510,"column_end":22,"column_start":14,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":20,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":22,"highlight_start":14,"text":"use chrono::{DateTime, NaiveDate, Utc};"}]},{"byte_end":529,"byte_start":520,"column_end":33,"column_start":24,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":20,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":24,"text":"use chrono::{DateTime, NaiveDate, Utc};"}]},{"byte_end":534,"byte_start":531,"column_end":38,"column_start":35,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":20,"line_start":20,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":35,"text":"use chrono::{DateTime, NaiveDate, Utc};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused imports: `ProgressBar` and `ProgressStyle`\n  --> src/migration/mod.rs:21:17\n   |\n21 | use indicatif::{ProgressBar, ProgressStyle};\n   |                 ^^^^^^^^^^^  ^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":582,"byte_start":537,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":22,"line_start":21,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":45,"highlight_start":1,"text":"use indicatif::{ProgressBar, ProgressStyle};"},{"highlight_end":1,"highlight_start":1,"text":"use regex::Regex;"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused imports: `ProgressBar` and `ProgressStyle`","spans":[{"byte_end":564,"byte_start":553,"column_end":28,"column_start":17,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":28,"highlight_start":17,"text":"use indicatif::{ProgressBar, ProgressStyle};"}]},{"byte_end":579,"byte_start":566,"column_end":43,"column_start":30,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":43,"highlight_start":30,"text":"use indicatif::{ProgressBar, ProgressStyle};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `std::collections::HashMap`\n  --> src/migration/mod.rs:23:5\n   |\n23 | use std::collections::HashMap;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the whole `use` item","rendered":null,"spans":[{"byte_end":631,"byte_start":600,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":24,"line_start":23,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":1,"text":"use std::collections::HashMap;"},{"highlight_end":1,"highlight_start":1,"text":"use std::path::{Path, PathBuf};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `std::collections::HashMap`","spans":[{"byte_end":629,"byte_start":604,"column_end":30,"column_start":5,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":23,"line_start":23,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":5,"text":"use std::collections::HashMap;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `Path`\n  --> src/migration/mod.rs:24:17\n   |\n24 | use std::path::{Path, PathBuf};\n   |                 ^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":653,"byte_start":647,"column_end":23,"column_start":17,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":24,"line_start":24,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":23,"highlight_start":17,"text":"use std::path::{Path, PathBuf};"}]},{"byte_end":647,"byte_start":646,"column_end":17,"column_start":16,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":24,"line_start":24,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":17,"highlight_start":16,"text":"use std::path::{Path, PathBuf};"}]},{"byte_end":661,"byte_start":660,"column_end":31,"column_start":30,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":24,"line_start":24,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":31,"highlight_start":30,"text":"use std::path::{Path, PathBuf};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `Path`","spans":[{"byte_end":651,"byte_start":647,"column_end":21,"column_start":17,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":24,"line_start":24,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":17,"text":"use std::path::{Path, PathBuf};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused import: `warn`\n  --> src/migration/mod.rs:26:21\n   |\n26 | use tracing::{info, warn};\n   |                     ^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"remove the unused import","rendered":null,"spans":[{"byte_end":707,"byte_start":701,"column_end":25,"column_start":19,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":25,"highlight_start":19,"text":"use tracing::{info, warn};"}]},{"byte_end":697,"byte_start":696,"column_end":15,"column_start":14,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":15,"highlight_start":14,"text":"use tracing::{info, warn};"}]},{"byte_end":708,"byte_start":707,"column_end":26,"column_start":25,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":26,"highlight_start":25,"text":"use tracing::{info, warn};"}]}]}],"code":{"code":"unused_imports","explanation":null},"level":"warning","message":"unused import: `warn`","spans":[{"byte_end":707,"byte_start":703,"column_end":25,"column_start":21,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":26,"line_start":26,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":21,"text":"use tracing::{info, warn};"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `provider`\n   --> src/cli/commands/mod.rs:191:25\n    |\n191 |             if let Some(provider) = services.embedding_provider {\n    |                         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_provider`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"`#[warn(unused_variables)]` on by default","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":6288,"byte_start":6280,"column_end":33,"column_start":25,"expansion":null,"file_name":"src/cli/commands/mod.rs","is_primary":true,"label":null,"line_end":191,"line_start":191,"suggested_replacement":"_provider","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":33,"highlight_start":25,"text":"            if let Some(provider) = services.embedding_provider {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `provider`","spans":[{"byte_end":6288,"byte_start":6280,"column_end":33,"column_start":25,"expansion":null,"file_name":"src/cli/commands/mod.rs","is_primary":true,"label":null,"line_end":191,"line_start":191,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":25,"text":"            if let Some(provider) = services.embedding_provider {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: `?` couldn't convert the error to `errors::Error`\n   --> src/cli/commands/task_cmds.rs:140:60\n    |\n140 |                 OutputFormat::Csv => print_task_csv(&tasks)?,\n    |                                                            ^ the trait `From<anyhow::Error>` is not implemented for `errors::Error`\n    |\n    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n    = help: the following other types implement trait `From<T>`:\n              `errors::Error` implements `From<EmbeddingError>`\n              `errors::Error` implements `From<ExportError>`\n              `errors::Error` implements `From<ParseIntError>`\n              `errors::Error` implements `From<chrono::ParseError>`\n              `errors::Error` implements `From<dialoguer::Error>`\n              `errors::Error` implements `From<regex::Error>`\n              `errors::Error` implements `From<rusqlite::Error>`\n              `errors::Error` implements `From<serde_json::Error>`\n            and 3 others\n    = note: required for `std::result::Result<(), errors::Error>` to implement `FromResidual<std::result::Result<Infallible, anyhow::Error>>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the following other types implement trait `From<T>`:\n  `errors::Error` implements `From<EmbeddingError>`\n  `errors::Error` implements `From<ExportError>`\n  `errors::Error` implements `From<ParseIntError>`\n  `errors::Error` implements `From<chrono::ParseError>`\n  `errors::Error` implements `From<dialoguer::Error>`\n  `errors::Error` implements `From<regex::Error>`\n  `errors::Error` implements `From<rusqlite::Error>`\n  `errors::Error` implements `From<serde_json::Error>`\nand 3 others","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `std::result::Result<(), errors::Error>` to implement `FromResidual<std::result::Result<Infallible, anyhow::Error>>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"`?` couldn't convert the error to `errors::Error`","spans":[{"byte_end":3810,"byte_start":3809,"column_end":61,"column_start":60,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/lib.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of operator `?`","span":{"byte_end":3810,"byte_start":3809,"column_end":61,"column_start":60,"expansion":null,"file_name":"src/cli/commands/task_cmds.rs","is_primary":false,"label":null,"line_end":140,"line_start":140,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":60,"text":"                OutputFormat::Csv => print_task_csv(&tasks)?,"}]}},"file_name":"src/cli/commands/task_cmds.rs","is_primary":true,"label":"the trait `From<anyhow::Error>` is not implemented for `errors::Error`","line_end":140,"line_start":140,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":60,"text":"                OutputFormat::Csv => print_task_csv(&tasks)?,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: `?` couldn't convert the error to `errors::Error`\n   --> src/cli/commands/task_cmds.rs:151:52\n    |\n151 |                 task.status = parse_task_status(&s)?;\n    |                                                    ^ the trait `From<anyhow::Error>` is not implemented for `errors::Error`\n    |\n    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n    = help: the following other types implement trait `From<T>`:\n              `errors::Error` implements `From<EmbeddingError>`\n              `errors::Error` implements `From<ExportError>`\n              `errors::Error` implements `From<ParseIntError>`\n              `errors::Error` implements `From<chrono::ParseError>`\n              `errors::Error` implements `From<dialoguer::Error>`\n              `errors::Error` implements `From<regex::Error>`\n              `errors::Error` implements `From<rusqlite::Error>`\n              `errors::Error` implements `From<serde_json::Error>`\n            and 3 others\n    = note: required for `std::result::Result<(), errors::Error>` to implement `FromResidual<std::result::Result<Infallible, anyhow::Error>>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the following other types implement trait `From<T>`:\n  `errors::Error` implements `From<EmbeddingError>`\n  `errors::Error` implements `From<ExportError>`\n  `errors::Error` implements `From<ParseIntError>`\n  `errors::Error` implements `From<chrono::ParseError>`\n  `errors::Error` implements `From<dialoguer::Error>`\n  `errors::Error` implements `From<regex::Error>`\n  `errors::Error` implements `From<rusqlite::Error>`\n  `errors::Error` implements `From<serde_json::Error>`\nand 3 others","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `std::result::Result<(), errors::Error>` to implement `FromResidual<std::result::Result<Infallible, anyhow::Error>>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"`?` couldn't convert the error to `errors::Error`","spans":[{"byte_end":4231,"byte_start":4230,"column_end":53,"column_start":52,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/lib.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of operator `?`","span":{"byte_end":4231,"byte_start":4230,"column_end":53,"column_start":52,"expansion":null,"file_name":"src/cli/commands/task_cmds.rs","is_primary":false,"label":null,"line_end":151,"line_start":151,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":52,"text":"                task.status = parse_task_status(&s)?;"}]}},"file_name":"src/cli/commands/task_cmds.rs","is_primary":true,"label":"the trait `From<anyhow::Error>` is not implemented for `errors::Error`","line_end":151,"line_start":151,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":53,"highlight_start":52,"text":"                task.status = parse_task_status(&s)?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: `?` couldn't convert the error to `errors::Error`\n  --> src/cli/commands/search_cmds.rs:45:61\n   |\n45 |             let results = service.search_tasks(&query).await?; // Simplified for now\n   |                                                             ^ the trait `From<anyhow::Error>` is not implemented for `errors::Error`\n   |\n   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n   = help: the following other types implement trait `From<T>`:\n             `errors::Error` implements `From<EmbeddingError>`\n             `errors::Error` implements `From<ExportError>`\n             `errors::Error` implements `From<ParseIntError>`\n             `errors::Error` implements `From<chrono::ParseError>`\n             `errors::Error` implements `From<dialoguer::Error>`\n             `errors::Error` implements `From<regex::Error>`\n             `errors::Error` implements `From<rusqlite::Error>`\n             `errors::Error` implements `From<serde_json::Error>`\n           and 3 others\n   = note: required for `std::result::Result<(), errors::Error>` to implement `FromResidual<std::result::Result<Infallible, anyhow::Error>>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the following other types implement trait `From<T>`:\n  `errors::Error` implements `From<EmbeddingError>`\n  `errors::Error` implements `From<ExportError>`\n  `errors::Error` implements `From<ParseIntError>`\n  `errors::Error` implements `From<chrono::ParseError>`\n  `errors::Error` implements `From<dialoguer::Error>`\n  `errors::Error` implements `From<regex::Error>`\n  `errors::Error` implements `From<rusqlite::Error>`\n  `errors::Error` implements `From<serde_json::Error>`\nand 3 others","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `std::result::Result<(), errors::Error>` to implement `FromResidual<std::result::Result<Infallible, anyhow::Error>>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"`?` couldn't convert the error to `errors::Error`","spans":[{"byte_end":1158,"byte_start":1157,"column_end":62,"column_start":61,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/lib.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of operator `?`","span":{"byte_end":1158,"byte_start":1157,"column_end":62,"column_start":61,"expansion":null,"file_name":"src/cli/commands/search_cmds.rs","is_primary":false,"label":null,"line_end":45,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":61,"text":"            let results = service.search_tasks(&query).await?; // Simplified for now"}]}},"file_name":"src/cli/commands/search_cmds.rs","is_primary":true,"label":"the trait `From<anyhow::Error>` is not implemented for `errors::Error`","line_end":45,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":61,"text":"            let results = service.search_tasks(&query).await?; // Simplified for now"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0277]: `?` couldn't convert the error to `errors::Error`\n  --> src/cli/commands/search_cmds.rs:50:61\n   |\n50 |             let results = service.search_tasks(&query).await?; // Simplified for now\n   |                                                             ^ the trait `From<anyhow::Error>` is not implemented for `errors::Error`\n   |\n   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n   = help: the following other types implement trait `From<T>`:\n             `errors::Error` implements `From<EmbeddingError>`\n             `errors::Error` implements `From<ExportError>`\n             `errors::Error` implements `From<ParseIntError>`\n             `errors::Error` implements `From<chrono::ParseError>`\n             `errors::Error` implements `From<dialoguer::Error>`\n             `errors::Error` implements `From<regex::Error>`\n             `errors::Error` implements `From<rusqlite::Error>`\n             `errors::Error` implements `From<serde_json::Error>`\n           and 3 others\n   = note: required for `std::result::Result<(), errors::Error>` to implement `FromResidual<std::result::Result<Infallible, anyhow::Error>>`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"the following other types implement trait `From<T>`:\n  `errors::Error` implements `From<EmbeddingError>`\n  `errors::Error` implements `From<ExportError>`\n  `errors::Error` implements `From<ParseIntError>`\n  `errors::Error` implements `From<chrono::ParseError>`\n  `errors::Error` implements `From<dialoguer::Error>`\n  `errors::Error` implements `From<regex::Error>`\n  `errors::Error` implements `From<rusqlite::Error>`\n  `errors::Error` implements `From<serde_json::Error>`\nand 3 others","rendered":null,"spans":[]},{"children":[],"code":null,"level":"note","message":"required for `std::result::Result<(), errors::Error>` to implement `FromResidual<std::result::Result<Infallible, anyhow::Error>>`","rendered":null,"spans":[]}],"code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","message":"`?` couldn't convert the error to `errors::Error`","spans":[{"byte_end":1406,"byte_start":1405,"column_end":62,"column_start":61,"expansion":{"def_site_span":{"byte_end":0,"byte_start":0,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/lib.rs","is_primary":false,"label":null,"line_end":1,"line_start":1,"suggested_replacement":null,"suggestion_applicability":null,"text":[]},"macro_decl_name":"desugaring of operator `?`","span":{"byte_end":1406,"byte_start":1405,"column_end":62,"column_start":61,"expansion":null,"file_name":"src/cli/commands/search_cmds.rs","is_primary":false,"label":null,"line_end":50,"line_start":50,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":61,"text":"            let results = service.search_tasks(&query).await?; // Simplified for now"}]}},"file_name":"src/cli/commands/search_cmds.rs","is_primary":true,"label":"the trait `From<anyhow::Error>` is not implemented for `errors::Error`","line_end":50,"line_start":50,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":62,"highlight_start":61,"text":"            let results = service.search_tasks(&query).await?; // Simplified for now"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `service`\n  --> src/cli/commands/export_cmd.rs:11:5\n   |\n11 |     service: &ExportService,\n   |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_service`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":248,"byte_start":241,"column_end":12,"column_start":5,"expansion":null,"file_name":"src/cli/commands/export_cmd.rs","is_primary":true,"label":null,"line_end":11,"line_start":11,"suggested_replacement":"_service","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":12,"highlight_start":5,"text":"    service: &ExportService,"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `service`","spans":[{"byte_end":248,"byte_start":241,"column_end":12,"column_start":5,"expansion":null,"file_name":"src/cli/commands/export_cmd.rs","is_primary":true,"label":null,"line_end":11,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":12,"highlight_start":5,"text":"    service: &ExportService,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `db`\n  --> src/cli/commands/import_cmd.rs:10:5\n   |\n10 |     db: Arc<DbConnection>,\n   |     ^^ help: if this is intentional, prefix it with an underscore: `_db`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":189,"byte_start":187,"column_end":7,"column_start":5,"expansion":null,"file_name":"src/cli/commands/import_cmd.rs","is_primary":true,"label":null,"line_end":10,"line_start":10,"suggested_replacement":"_db","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":7,"highlight_start":5,"text":"    db: Arc<DbConnection>,"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `db`","spans":[{"byte_end":189,"byte_start":187,"column_end":7,"column_start":5,"expansion":null,"file_name":"src/cli/commands/import_cmd.rs","is_primary":true,"label":null,"line_end":10,"line_start":10,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":5,"text":"    db: Arc<DbConnection>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `db`\n --> src/cli/commands/watch_cmd.rs:9:5\n  |\n9 |     db: Arc<DbConnection>,\n  |     ^^ help: if this is intentional, prefix it with an underscore: `_db`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":163,"byte_start":161,"column_end":7,"column_start":5,"expansion":null,"file_name":"src/cli/commands/watch_cmd.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":"_db","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":7,"highlight_start":5,"text":"    db: Arc<DbConnection>,"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `db`","spans":[{"byte_end":163,"byte_start":161,"column_end":7,"column_start":5,"expansion":null,"file_name":"src/cli/commands/watch_cmd.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":7,"highlight_start":5,"text":"    db: Arc<DbConnection>,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `migrate_sprints` found for mutable reference `&mut MarkdownMigrator` in the current scope\n  --> src/migration/mod.rs:69:14\n   |\n69 |         self.migrate_sprints().await?;\n   |              ^^^^^^^^^^^^^^^\n   |\nhelp: there is a method `migrate_adrs` with a similar name\n   |\n69 |         self.migrate_adrs().await?;\n   |              ~~~~~~~~~~~~\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"there is a method `migrate_adrs` with a similar name","rendered":null,"spans":[{"byte_end":1821,"byte_start":1806,"column_end":29,"column_start":14,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":69,"line_start":69,"suggested_replacement":"migrate_adrs","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":29,"highlight_start":14,"text":"        self.migrate_sprints().await?;"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `migrate_sprints` found for mutable reference `&mut MarkdownMigrator` in the current scope","spans":[{"byte_end":1821,"byte_start":1806,"column_end":29,"column_start":14,"expansion":null,"file_name":"src/migration/mod.rs","is_primary":true,"label":null,"line_end":69,"line_start":69,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":14,"text":"        self.migrate_sprints().await?;"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied\n   --> src/migration/components.rs:19:58\n    |\n19  |     pub(super) async fn migrate_components(&mut self) -> Result<()> {\n    |                                                          ^^^^^^ -- supplied 1 generic argument\n    |                                                          |\n    |                                                          expected 2 generic arguments\n    |\nnote: enum defined here, with 2 generic parameters: `T`, `E`\n   --> /Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs:528:10\n    |\n528 | pub enum Result<T, E> {\n    |          ^^^^^^ -  -\nhelp: add missing generic argument\n    |\n19  |     pub(super) async fn migrate_components(&mut self) -> Result<(), E> {\n    |                                                                   +++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"enum defined here, with 2 generic parameters: `T`, `E`","rendered":null,"spans":[{"byte_end":19614,"byte_start":19613,"column_end":18,"column_start":17,"expansion":null,"file_name":"/Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs","is_primary":false,"label":"","line_end":528,"line_start":528,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":18,"highlight_start":17,"text":"pub enum Result<T, E> {"}]},{"byte_end":19617,"byte_start":19616,"column_end":21,"column_start":20,"expansion":null,"file_name":"/Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs","is_primary":false,"label":"","line_end":528,"line_start":528,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":20,"text":"pub enum Result<T, E> {"}]},{"byte_end":19612,"byte_start":19606,"column_end":16,"column_start":10,"expansion":null,"file_name":"/Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs","is_primary":true,"label":null,"line_end":528,"line_start":528,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":16,"highlight_start":10,"text":"pub enum Result<T, E> {"}]}]},{"children":[],"code":null,"level":"help","message":"add missing generic argument","rendered":null,"spans":[{"byte_end":477,"byte_start":477,"column_end":67,"column_start":67,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":null,"line_end":19,"line_start":19,"suggested_replacement":", E","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":67,"highlight_start":67,"text":"    pub(super) async fn migrate_components(&mut self) -> Result<()> {"}]}]}],"code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","message":"enum takes 2 generic arguments but 1 generic argument was supplied","spans":[{"byte_end":474,"byte_start":468,"column_end":64,"column_start":58,"expansion":null,"file_name":"src/migration/components.rs","is_primary":true,"label":"expected 2 generic arguments","line_end":19,"line_start":19,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":64,"highlight_start":58,"text":"    pub(super) async fn migrate_components(&mut self) -> Result<()> {"}]},{"byte_end":477,"byte_start":475,"column_end":67,"column_start":65,"expansion":null,"file_name":"src/migration/components.rs","is_primary":false,"label":"supplied 1 generic argument","line_end":19,"line_start":19,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":67,"highlight_start":65,"text":"    pub(super) async fn migrate_components(&mut self) -> Result<()> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `create_component` do not match the trait declaration\n  --> src/services/component_service.rs:29:30\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n12 |     async fn create_component(&self, component: Component) -> Result<Component>;\n   |              --------------------------------------------- lifetimes in impl do not match this method in trait\n...\n29 |     async fn create_component(&self, _component: Component) -> Result<Component> {\n   |                              ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `create_component` do not match the trait declaration","spans":[{"byte_end":950,"byte_start":950,"column_end":30,"column_start":30,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":29,"line_start":29,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":30,"text":"    async fn create_component(&self, _component: Component) -> Result<Component> {"}]},{"byte_end":378,"byte_start":333,"column_end":59,"column_start":14,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":59,"highlight_start":14,"text":"    async fn create_component(&self, component: Component) -> Result<Component>;"}]},{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/component_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `get_component_by_id` do not match the trait declaration\n  --> src/services/component_service.rs:33:33\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n13 |     async fn get_component_by_id(&self, id: &str) -> Result<Option<Component>>;\n   |              ------------------------------------ lifetimes in impl do not match this method in trait\n...\n33 |     async fn get_component_by_id(&self, _id: &str) -> Result<Option<Component>> {\n   |                                 ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `get_component_by_id` do not match the trait declaration","spans":[{"byte_end":1124,"byte_start":1124,"column_end":33,"column_start":33,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":33,"line_start":33,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":33,"text":"    async fn get_component_by_id(&self, _id: &str) -> Result<Option<Component>> {"}]},{"byte_end":450,"byte_start":414,"column_end":50,"column_start":14,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":50,"highlight_start":14,"text":"    async fn get_component_by_id(&self, id: &str) -> Result<Option<Component>>;"}]},{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/component_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `update_component` do not match the trait declaration\n  --> src/services/component_service.rs:37:30\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n14 |     async fn update_component(&self, component: Component) -> Result<Component>;\n   |              --------------------------------------------- lifetimes in impl do not match this method in trait\n...\n37 |     async fn update_component(&self, _component: Component) -> Result<Component> {\n   |                              ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `update_component` do not match the trait declaration","spans":[{"byte_end":1294,"byte_start":1294,"column_end":30,"column_start":30,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":37,"line_start":37,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":30,"text":"    async fn update_component(&self, _component: Component) -> Result<Component> {"}]},{"byte_end":539,"byte_start":494,"column_end":59,"column_start":14,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":59,"highlight_start":14,"text":"    async fn update_component(&self, component: Component) -> Result<Component>;"}]},{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/component_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `delete_component` do not match the trait declaration\n  --> src/services/component_service.rs:41:30\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n15 |     async fn delete_component(&self, id: &str) -> Result<()>;\n   |              --------------------------------- lifetimes in impl do not match this method in trait\n...\n41 |     async fn delete_component(&self, _id: &str) -> Result<()> {\n   |                              ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `delete_component` do not match the trait declaration","spans":[{"byte_end":1465,"byte_start":1465,"column_end":30,"column_start":30,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":41,"line_start":41,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":30,"text":"    async fn delete_component(&self, _id: &str) -> Result<()> {"}]},{"byte_end":608,"byte_start":575,"column_end":47,"column_start":14,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":15,"line_start":15,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":47,"highlight_start":14,"text":"    async fn delete_component(&self, id: &str) -> Result<()>;"}]},{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/component_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `list_components` do not match the trait declaration\n  --> src/services/component_service.rs:45:29\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n16 |     async fn list_components(&self) -> Result<Vec<Component>>;\n   |              ---------------------- lifetimes in impl do not match this method in trait\n...\n45 |     async fn list_components(&self) -> Result<Vec<Component>> {\n   |                             ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `list_components` do not match the trait declaration","spans":[{"byte_end":1616,"byte_start":1616,"column_end":29,"column_start":29,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":45,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":29,"text":"    async fn list_components(&self) -> Result<Vec<Component>> {"}]},{"byte_end":659,"byte_start":637,"column_end":36,"column_start":14,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":16,"line_start":16,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":36,"highlight_start":14,"text":"    async fn list_components(&self) -> Result<Vec<Component>>;"}]},{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":218,"byte_start":204,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/component_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/component_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `create_adr` do not match the trait declaration\n  --> src/services/adr_service.rs:29:24\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n12 |     async fn create_adr(&self, adr: Adr) -> Result<Adr>;\n   |              --------------------------- lifetimes in impl do not match this method in trait\n...\n29 |     async fn create_adr(&self, _adr: Adr) -> Result<Adr> {\n   |                        ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `create_adr` do not match the trait declaration","spans":[{"byte_end":824,"byte_start":824,"column_end":24,"column_start":24,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":29,"line_start":29,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":24,"text":"    async fn create_adr(&self, _adr: Adr) -> Result<Adr> {"}]},{"byte_end":336,"byte_start":309,"column_end":41,"column_start":14,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":14,"text":"    async fn create_adr(&self, adr: Adr) -> Result<Adr>;"}]},{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/adr_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `get_adr_by_id` do not match the trait declaration\n  --> src/services/adr_service.rs:33:27\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n13 |     async fn get_adr_by_id(&self, id: &str) -> Result<Option<Adr>>;\n   |              ------------------------------ lifetimes in impl do not match this method in trait\n...\n33 |     async fn get_adr_by_id(&self, _id: &str) -> Result<Option<Adr>> {\n   |                           ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `get_adr_by_id` do not match the trait declaration","spans":[{"byte_end":962,"byte_start":962,"column_end":27,"column_start":27,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":33,"line_start":33,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":27,"highlight_start":27,"text":"    async fn get_adr_by_id(&self, _id: &str) -> Result<Option<Adr>> {"}]},{"byte_end":396,"byte_start":366,"column_end":44,"column_start":14,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":44,"highlight_start":14,"text":"    async fn get_adr_by_id(&self, id: &str) -> Result<Option<Adr>>;"}]},{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/adr_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `update_adr` do not match the trait declaration\n  --> src/services/adr_service.rs:37:24\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n14 |     async fn update_adr(&self, adr: Adr) -> Result<Adr>;\n   |              --------------------------- lifetimes in impl do not match this method in trait\n...\n37 |     async fn update_adr(&self, _adr: Adr) -> Result<Adr> {\n   |                        ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `update_adr` do not match the trait declaration","spans":[{"byte_end":1108,"byte_start":1108,"column_end":24,"column_start":24,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":37,"line_start":37,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":24,"text":"    async fn update_adr(&self, _adr: Adr) -> Result<Adr> {"}]},{"byte_end":461,"byte_start":434,"column_end":41,"column_start":14,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":14,"text":"    async fn update_adr(&self, adr: Adr) -> Result<Adr>;"}]},{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/adr_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `delete_adr` do not match the trait declaration\n  --> src/services/adr_service.rs:41:24\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n15 |     async fn delete_adr(&self, id: &str) -> Result<()>;\n   |              --------------------------- lifetimes in impl do not match this method in trait\n...\n41 |     async fn delete_adr(&self, _id: &str) -> Result<()> {\n   |                        ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `delete_adr` do not match the trait declaration","spans":[{"byte_end":1243,"byte_start":1243,"column_end":24,"column_start":24,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":41,"line_start":41,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":24,"highlight_start":24,"text":"    async fn delete_adr(&self, _id: &str) -> Result<()> {"}]},{"byte_end":518,"byte_start":491,"column_end":41,"column_start":14,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":15,"line_start":15,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":41,"highlight_start":14,"text":"    async fn delete_adr(&self, id: &str) -> Result<()>;"}]},{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/adr_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `list_adrs` do not match the trait declaration\n  --> src/services/adr_service.rs:45:23\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n16 |     async fn list_adrs(&self) -> Result<Vec<Adr>>;\n   |              ---------------- lifetimes in impl do not match this method in trait\n...\n45 |     async fn list_adrs(&self) -> Result<Vec<Adr>> {\n   |                       ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `list_adrs` do not match the trait declaration","spans":[{"byte_end":1376,"byte_start":1376,"column_end":23,"column_start":23,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":45,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":23,"text":"    async fn list_adrs(&self) -> Result<Vec<Adr>> {"}]},{"byte_end":563,"byte_start":547,"column_end":30,"column_start":14,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":16,"line_start":16,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":30,"highlight_start":14,"text":"    async fn list_adrs(&self) -> Result<Vec<Adr>>;"}]},{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":200,"byte_start":186,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/adr_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/adr_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `create_user_story` do not match the trait declaration\n  --> src/services/user_story_service.rs:29:31\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n12 |     async fn create_user_story(&self, user_story: UserStory) -> Result<UserStory>;\n   |              ----------------------------------------------- lifetimes in impl do not match this method in trait\n...\n29 |     async fn create_user_story(&self, _user_story: UserStory) -> Result<UserStory> {\n   |                               ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `create_user_story` do not match the trait declaration","spans":[{"byte_end":961,"byte_start":961,"column_end":31,"column_start":31,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":29,"line_start":29,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":31,"text":"    async fn create_user_story(&self, _user_story: UserStory) -> Result<UserStory> {"}]},{"byte_end":382,"byte_start":335,"column_end":61,"column_start":14,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":14,"text":"    async fn create_user_story(&self, user_story: UserStory) -> Result<UserStory>;"}]},{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `get_user_story_by_id` do not match the trait declaration\n  --> src/services/user_story_service.rs:33:34\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n13 |     async fn get_user_story_by_id(&self, id: &str) -> Result<Option<UserStory>>;\n   |              ------------------------------------- lifetimes in impl do not match this method in trait\n...\n33 |     async fn get_user_story_by_id(&self, _id: &str) -> Result<Option<UserStory>> {\n   |                                  ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `get_user_story_by_id` do not match the trait declaration","spans":[{"byte_end":1138,"byte_start":1138,"column_end":34,"column_start":34,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":33,"line_start":33,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":34,"highlight_start":34,"text":"    async fn get_user_story_by_id(&self, _id: &str) -> Result<Option<UserStory>> {"}]},{"byte_end":455,"byte_start":418,"column_end":51,"column_start":14,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":13,"line_start":13,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":51,"highlight_start":14,"text":"    async fn get_user_story_by_id(&self, id: &str) -> Result<Option<UserStory>>;"}]},{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `update_user_story` do not match the trait declaration\n  --> src/services/user_story_service.rs:37:31\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n14 |     async fn update_user_story(&self, user_story: UserStory) -> Result<UserStory>;\n   |              ----------------------------------------------- lifetimes in impl do not match this method in trait\n...\n37 |     async fn update_user_story(&self, _user_story: UserStory) -> Result<UserStory> {\n   |                               ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `update_user_story` do not match the trait declaration","spans":[{"byte_end":1310,"byte_start":1310,"column_end":31,"column_start":31,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":37,"line_start":37,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":31,"text":"    async fn update_user_story(&self, _user_story: UserStory) -> Result<UserStory> {"}]},{"byte_end":546,"byte_start":499,"column_end":61,"column_start":14,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":14,"line_start":14,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":61,"highlight_start":14,"text":"    async fn update_user_story(&self, user_story: UserStory) -> Result<UserStory>;"}]},{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `delete_user_story` do not match the trait declaration\n  --> src/services/user_story_service.rs:41:31\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n15 |     async fn delete_user_story(&self, id: &str) -> Result<()>;\n   |              ---------------------------------- lifetimes in impl do not match this method in trait\n...\n41 |     async fn delete_user_story(&self, _id: &str) -> Result<()> {\n   |                               ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `delete_user_story` do not match the trait declaration","spans":[{"byte_end":1484,"byte_start":1484,"column_end":31,"column_start":31,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":41,"line_start":41,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":31,"text":"    async fn delete_user_story(&self, _id: &str) -> Result<()> {"}]},{"byte_end":616,"byte_start":582,"column_end":48,"column_start":14,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":15,"line_start":15,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":48,"highlight_start":14,"text":"    async fn delete_user_story(&self, id: &str) -> Result<()>;"}]},{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `list_user_stories` do not match the trait declaration\n  --> src/services/user_story_service.rs:45:31\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n16 |     async fn list_user_stories(&self) -> Result<Vec<UserStory>>;\n   |              ------------------------ lifetimes in impl do not match this method in trait\n...\n45 |     async fn list_user_stories(&self) -> Result<Vec<UserStory>> {\n   |                               ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `list_user_stories` do not match the trait declaration","spans":[{"byte_end":1638,"byte_start":1638,"column_end":31,"column_start":31,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":45,"line_start":45,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":31,"highlight_start":31,"text":"    async fn list_user_stories(&self) -> Result<Vec<UserStory>> {"}]},{"byte_end":669,"byte_start":645,"column_end":38,"column_start":14,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":16,"line_start":16,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":14,"text":"    async fn list_user_stories(&self) -> Result<Vec<UserStory>>;"}]},{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":220,"byte_start":206,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/user_story_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/user_story_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `search_tasks` do not match the trait declaration\n  --> src/services/search_service.rs:26:26\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n12 |     async fn search_tasks(&self, query: &str) -> Result<Vec<Task>>;\n   |              -------------------------------- lifetimes in impl do not match this method in trait\n...\n26 |     async fn search_tasks(&self, _query: &str) -> Result<Vec<Task>> {\n   |                          ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `search_tasks` do not match the trait declaration","spans":[{"byte_end":691,"byte_start":691,"column_end":26,"column_start":26,"expansion":null,"file_name":"src/services/search_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":26,"line_start":26,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":26,"highlight_start":26,"text":"    async fn search_tasks(&self, _query: &str) -> Result<Vec<Task>> {"}]},{"byte_end":376,"byte_start":344,"column_end":46,"column_start":14,"expansion":null,"file_name":"src/services/search_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":46,"highlight_start":14,"text":"    async fn search_tasks(&self, query: &str) -> Result<Vec<Task>>;"}]},{"byte_end":232,"byte_start":218,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":232,"byte_start":218,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/search_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/search_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0195]: lifetime parameters or bounds on method `export_tasks_to_markdown` do not match the trait declaration\n  --> src/services/export_service.rs:26:38\n   |\n9  | #[async_trait]\n   | -------------- this bound might be missing in the impl\n...\n12 |     async fn export_tasks_to_markdown(&self, tasks: Vec<Task>, path: &str) -> Result<()>;\n   |              ------------------------------------------------------------- lifetimes in impl do not match this method in trait\n...\n26 |     async fn export_tasks_to_markdown(&self, _tasks: Vec<Task>, _path: &str) -> Result<()> {\n   |                                      ^ lifetimes do not match method in trait\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0195","explanation":"The lifetime parameters of the method do not match the trait declaration.\n\nErroneous code example:\n\n```compile_fail,E0195\ntrait Trait {\n    fn bar<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn bar<'a,'b>(x: &'a str, y: &'b str) {\n    // error: lifetime parameters or bounds on method `bar`\n    // do not match the trait declaration\n    }\n}\n```\n\nThe lifetime constraint `'b` for `bar()` implementation does not match the\ntrait declaration. Ensure lifetime declarations match exactly in both trait\ndeclaration and implementation. Example:\n\n```\ntrait Trait {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str);\n}\n\nstruct Foo;\n\nimpl Trait for Foo {\n    fn t<'a,'b:'a>(x: &'a str, y: &'b str) { // ok!\n    }\n}\n```\n"},"level":"error","message":"lifetime parameters or bounds on method `export_tasks_to_markdown` do not match the trait declaration","spans":[{"byte_end":725,"byte_start":725,"column_end":38,"column_start":38,"expansion":null,"file_name":"src/services/export_service.rs","is_primary":true,"label":"lifetimes do not match method in trait","line_end":26,"line_start":26,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":38,"text":"    async fn export_tasks_to_markdown(&self, _tasks: Vec<Task>, _path: &str) -> Result<()> {"}]},{"byte_end":405,"byte_start":344,"column_end":75,"column_start":14,"expansion":null,"file_name":"src/services/export_service.rs","is_primary":false,"label":"lifetimes in impl do not match this method in trait","line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":75,"highlight_start":14,"text":"    async fn export_tasks_to_markdown(&self, tasks: Vec<Task>, path: &str) -> Result<()>;"}]},{"byte_end":232,"byte_start":218,"column_end":15,"column_start":1,"expansion":{"def_site_span":{"byte_end":7545,"byte_start":7473,"column_end":73,"column_start":1,"expansion":null,"file_name":"/Users/mvcorrea/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs","is_primary":false,"label":null,"line_end":252,"line_start":252,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":1,"text":"pub fn async_trait(args: TokenStream, input: TokenStream) -> TokenStream {"}]},"macro_decl_name":"#[async_trait]","span":{"byte_end":232,"byte_start":218,"column_end":15,"column_start":1,"expansion":null,"file_name":"src/services/export_service.rs","is_primary":false,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}},"file_name":"src/services/export_service.rs","is_primary":false,"label":"this bound might be missing in the impl","line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":1,"text":"#[async_trait]"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0599]: no method named `create_task` found for struct `TaskService` in the current scope\n  --> src/migration/tasks.rs:54:49\n   |\n54 |                         if let Err(e) = service.create_task(task).await {\n   |                                                 ^^^^^^^^^^^\n   |\n  ::: src/services/task_service.rs:11:14\n   |\n11 |     async fn create_task(&self, task: Task) -> Result<Task>;\n   |              ----------- the method is available for `TaskService` here\n...\n19 | pub struct TaskService {\n   | ---------------------- method `create_task` not found for this struct\n   |\n   = help: items from traits can only be used if the trait is in scope\nhelp: trait `TaskServiceTrait` which provides `create_task` is implemented but not in scope; perhaps you want to import it\n   |\n3  + use crate::services::task_service::TaskServiceTrait;\n   |\nhelp: there is a method `update_task` with a similar name\n   |\n54 |                         if let Err(e) = service.update_task(task).await {\n   |                                                 ~~~~~~~~~~~\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"items from traits can only be used if the trait is in scope","rendered":null,"spans":[]},{"children":[],"code":null,"level":"help","message":"trait `TaskServiceTrait` which provides `create_task` is implemented but not in scope; perhaps you want to import it","rendered":null,"spans":[{"byte_end":34,"byte_start":34,"column_end":1,"column_start":1,"expansion":null,"file_name":"src/migration/tasks.rs","is_primary":true,"label":null,"line_end":3,"line_start":3,"suggested_replacement":"use crate::services::task_service::TaskServiceTrait;\n","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":1,"highlight_start":1,"text":"use crate::{"}]}]},{"children":[],"code":null,"level":"help","message":"there is a method `update_task` with a similar name","rendered":null,"spans":[{"byte_end":1722,"byte_start":1711,"column_end":60,"column_start":49,"expansion":null,"file_name":"src/migration/tasks.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":"update_task","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":60,"highlight_start":49,"text":"                        if let Err(e) = service.create_task(task).await {"}]}]}],"code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","message":"no method named `create_task` found for struct `TaskService` in the current scope","spans":[{"byte_end":616,"byte_start":594,"column_end":23,"column_start":1,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":false,"label":"method `create_task` not found for this struct","line_end":19,"line_start":19,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":1,"text":"pub struct TaskService {"}]},{"byte_end":292,"byte_start":281,"column_end":25,"column_start":14,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":false,"label":"the method is available for `TaskService` here","line_end":11,"line_start":11,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":25,"highlight_start":14,"text":"    async fn create_task(&self, task: Task) -> Result<Task>;"}]},{"byte_end":1722,"byte_start":1711,"column_end":60,"column_start":49,"expansion":null,"file_name":"src/migration/tasks.rs","is_primary":true,"label":null,"line_end":54,"line_start":54,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":60,"highlight_start":49,"text":"                        if let Err(e) = service.create_task(task).await {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/migration/sprints.rs:93:74\n    |\n93  | ...rror::Parse(chrono::ParseError::from(chrono::format::ParseErrorKind::Invalid)))?, // Corrected error mapping\n    |                ------------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ParseError`, found `ParseErrorKind`\n    |                |\n    |                arguments to this function are incorrect\n    |\nnote: associated function defined here\n   --> /Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs:587:8\n    |\n587 |     fn from(value: T) -> Self;\n    |        ^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"associated function defined here","rendered":null,"spans":[{"byte_end":22757,"byte_start":22753,"column_end":12,"column_start":8,"expansion":null,"file_name":"/Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":12,"highlight_start":8,"text":"    fn from(value: T) -> Self;"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":3251,"byte_start":3212,"column_end":113,"column_start":74,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":"expected `ParseError`, found `ParseErrorKind`","line_end":93,"line_start":93,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":113,"highlight_start":74,"text":"                    .ok_or_else(|| Error::Parse(chrono::ParseError::from(chrono::format::ParseErrorKind::Invalid)))?, // Corrected error mapping"}]},{"byte_end":3211,"byte_start":3187,"column_end":73,"column_start":49,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":false,"label":"arguments to this function are incorrect","line_end":93,"line_start":93,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":49,"text":"                    .ok_or_else(|| Error::Parse(chrono::ParseError::from(chrono::format::ParseErrorKind::Invalid)))?, // Corrected error mapping"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/migration/sprints.rs:98:80\n    |\n98  |                     .map_err(|e| errors::Error::Parse(chrono::ParseError::from(e.kind())))? // Corrected error mapping\n    |                                                       ------------------------ ^^^^^^^^ expected `ParseError`, found `ParseErrorKind`\n    |                                                       |\n    |                                                       arguments to this function are incorrect\n    |\nnote: associated function defined here\n   --> /Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs:587:8\n    |\n587 |     fn from(value: T) -> Self;\n    |        ^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"associated function defined here","rendered":null,"spans":[{"byte_end":22757,"byte_start":22753,"column_end":12,"column_start":8,"expansion":null,"file_name":"/Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":12,"highlight_start":8,"text":"    fn from(value: T) -> Self;"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":3537,"byte_start":3529,"column_end":88,"column_start":80,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":"expected `ParseError`, found `ParseErrorKind`","line_end":98,"line_start":98,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":88,"highlight_start":80,"text":"                    .map_err(|e| errors::Error::Parse(chrono::ParseError::from(e.kind())))? // Corrected error mapping"}]},{"byte_end":3528,"byte_start":3504,"column_end":79,"column_start":55,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":false,"label":"arguments to this function are incorrect","line_end":98,"line_start":98,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":79,"highlight_start":55,"text":"                    .map_err(|e| errors::Error::Parse(chrono::ParseError::from(e.kind())))? // Corrected error mapping"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/migration/sprints.rs:100:74\n    |\n100 | ...rror::Parse(chrono::ParseError::from(chrono::format::ParseErrorKind::Invalid)))?, // Corrected error mapping\n    |                ------------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `ParseError`, found `ParseErrorKind`\n    |                |\n    |                arguments to this function are incorrect\n    |\nnote: associated function defined here\n   --> /Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs:587:8\n    |\n587 |     fn from(value: T) -> Self;\n    |        ^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"associated function defined here","rendered":null,"spans":[{"byte_end":22757,"byte_start":22753,"column_end":12,"column_start":8,"expansion":null,"file_name":"/Users/mvcorrea/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs","is_primary":true,"label":null,"line_end":587,"line_start":587,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":12,"highlight_start":8,"text":"    fn from(value: T) -> Self;"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":3726,"byte_start":3687,"column_end":113,"column_start":74,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":true,"label":"expected `ParseError`, found `ParseErrorKind`","line_end":100,"line_start":100,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":113,"highlight_start":74,"text":"                    .ok_or_else(|| Error::Parse(chrono::ParseError::from(chrono::format::ParseErrorKind::Invalid)))?, // Corrected error mapping"}]},{"byte_end":3686,"byte_start":3662,"column_end":73,"column_start":49,"expansion":null,"file_name":"src/migration/sprints.rs","is_primary":false,"label":"arguments to this function are incorrect","line_end":100,"line_start":100,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":73,"highlight_start":49,"text":"                    .ok_or_else(|| Error::Parse(chrono::ParseError::from(chrono::format::ParseErrorKind::Invalid)))?, // Corrected error mapping"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0282]: type annotations needed\n   --> src/services/sprint_service.rs:103:19\n    |\n99  |             Ok(sprint_clone)\n    |             ---------------- type must be known at this point\n...\n103 |         .map_err(|e| Error::DatabaseOperation(format!(\"Failed to create sprint: {}\", e)))\n    |                   ^\n    |\nhelp: consider giving this closure parameter an explicit type\n    |\n103 |         .map_err(|e: /* Type */| Error::DatabaseOperation(format!(\"Failed to create sprint: {}\", e)))\n    |                    ++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider giving this closure parameter an explicit type","rendered":null,"spans":[{"byte_end":4791,"byte_start":4791,"column_end":20,"column_start":20,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":null,"line_end":103,"line_start":103,"suggested_replacement":": /* Type */","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":20,"highlight_start":20,"text":"        .map_err(|e| Error::DatabaseOperation(format!(\"Failed to create sprint: {}\", e)))"}]}]}],"code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","message":"type annotations needed","spans":[{"byte_end":4652,"byte_start":4636,"column_end":29,"column_start":13,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":false,"label":"type must be known at this point","line_end":99,"line_start":99,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":13,"text":"            Ok(sprint_clone)"}]},{"byte_end":4791,"byte_start":4790,"column_end":20,"column_start":19,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":null,"line_end":103,"line_start":103,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":19,"text":"        .map_err(|e| Error::DatabaseOperation(format!(\"Failed to create sprint: {}\", e)))"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/services/sprint_service.rs:143:134\n    |\n143 | ...rusqlite::types::Type::Text, Box::new(Error::Parse(e))))?, // Corrected error mapping\n    |                                          ------------ ^ expected `ParseError`, found `Error`\n    |                                          |\n    |                                          arguments to this enum variant are incorrect\n    |\nnote: tuple variant defined here\n   --> src/core/errors.rs:21:5\n    |\n21  |     Parse(chrono::ParseError),\n    |     ^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":530,"byte_start":525,"column_end":10,"column_start":5,"expansion":null,"file_name":"src/core/errors.rs","is_primary":true,"label":null,"line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":5,"text":"    Parse(chrono::ParseError),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":7533,"byte_start":7532,"column_end":135,"column_start":134,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":"expected `ParseError`, found `Error`","line_end":143,"line_start":143,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":135,"highlight_start":134,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e))))?, // Corrected error mapping"}]},{"byte_end":7531,"byte_start":7519,"column_end":133,"column_start":121,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":143,"line_start":143,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":133,"highlight_start":121,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e))))?, // Corrected error mapping"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0282]: type annotations needed\n   --> src/services/sprint_service.rs:209:19\n    |\n205 |             Ok(sprint_clone)\n    |             ---------------- type must be known at this point\n...\n209 |         .map_err(|e| Error::DatabaseOperation(format!(\"Failed to update sprint: {}\", e)))\n    |                   ^\n    |\nhelp: consider giving this closure parameter an explicit type\n    |\n209 |         .map_err(|e: /* Type */| Error::DatabaseOperation(format!(\"Failed to update sprint: {}\", e)))\n    |                    ++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider giving this closure parameter an explicit type","rendered":null,"spans":[{"byte_end":11196,"byte_start":11196,"column_end":20,"column_start":20,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":null,"line_end":209,"line_start":209,"suggested_replacement":": /* Type */","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":20,"highlight_start":20,"text":"        .map_err(|e| Error::DatabaseOperation(format!(\"Failed to update sprint: {}\", e)))"}]}]}],"code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","message":"type annotations needed","spans":[{"byte_end":11057,"byte_start":11041,"column_end":29,"column_start":13,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":false,"label":"type must be known at this point","line_end":205,"line_start":205,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":29,"highlight_start":13,"text":"            Ok(sprint_clone)"}]},{"byte_end":11196,"byte_start":11195,"column_end":20,"column_start":19,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":null,"line_end":209,"line_start":209,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":19,"text":"        .map_err(|e| Error::DatabaseOperation(format!(\"Failed to update sprint: {}\", e)))"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/services/sprint_service.rs:258:134\n    |\n258 | ...qlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?\n    |                                       ------------ ^^^^^^^^^^^^^ expected `ParseError`, found `String`\n    |                                       |\n    |                                       arguments to this enum variant are incorrect\n    |\nnote: tuple variant defined here\n   --> src/core/errors.rs:21:5\n    |\n21  |     Parse(chrono::ParseError),\n    |     ^^^^^\nhelp: try removing the method call\n    |\n258 -                         .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?\n258 +                         .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e))))?\n    |\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":530,"byte_start":525,"column_end":10,"column_start":5,"expansion":null,"file_name":"src/core/errors.rs","is_primary":true,"label":null,"line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":5,"text":"    Parse(chrono::ParseError),"}]}]},{"children":[],"code":null,"level":"help","message":"try removing the method call","rendered":null,"spans":[{"byte_end":13957,"byte_start":13945,"column_end":147,"column_start":135,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":null,"line_end":258,"line_start":258,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":147,"highlight_start":135,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":13957,"byte_start":13944,"column_end":147,"column_start":134,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":"expected `ParseError`, found `String`","line_end":258,"line_start":258,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":147,"highlight_start":134,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?"}]},{"byte_end":13943,"byte_start":13931,"column_end":133,"column_start":121,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":258,"line_start":258,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":133,"highlight_start":121,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/services/sprint_service.rs:264:134\n    |\n264 | ...qlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,\n    |                                       ------------ ^^^^^^^^^^^^^ expected `ParseError`, found `String`\n    |                                       |\n    |                                       arguments to this enum variant are incorrect\n    |\nnote: tuple variant defined here\n   --> src/core/errors.rs:21:5\n    |\n21  |     Parse(chrono::ParseError),\n    |     ^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":530,"byte_start":525,"column_end":10,"column_start":5,"expansion":null,"file_name":"src/core/errors.rs","is_primary":true,"label":null,"line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":5,"text":"    Parse(chrono::ParseError),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":14461,"byte_start":14448,"column_end":147,"column_start":134,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":"expected `ParseError`, found `String`","line_end":264,"line_start":264,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":147,"highlight_start":134,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,"}]},{"byte_end":14447,"byte_start":14435,"column_end":133,"column_start":121,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":264,"line_start":264,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":133,"highlight_start":121,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/services/sprint_service.rs:266:134\n    |\n266 | ...qlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,\n    |                                       ------------ ^^^^^^^^^^^^^ expected `ParseError`, found `String`\n    |                                       |\n    |                                       arguments to this enum variant are incorrect\n    |\nnote: tuple variant defined here\n   --> src/core/errors.rs:21:5\n    |\n21  |     Parse(chrono::ParseError),\n    |     ^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":530,"byte_start":525,"column_end":10,"column_start":5,"expansion":null,"file_name":"src/core/errors.rs","is_primary":true,"label":null,"line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":5,"text":"    Parse(chrono::ParseError),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":14674,"byte_start":14661,"column_end":147,"column_start":134,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":"expected `ParseError`, found `String`","line_end":266,"line_start":266,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":147,"highlight_start":134,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,"}]},{"byte_end":14660,"byte_start":14648,"column_end":133,"column_start":121,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":266,"line_start":266,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":133,"highlight_start":121,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/services/sprint_service.rs:268:134\n    |\n268 | ...qlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,\n    |                                       ------------ ^^^^^^^^^^^^^ expected `ParseError`, found `String`\n    |                                       |\n    |                                       arguments to this enum variant are incorrect\n    |\nnote: tuple variant defined here\n   --> src/core/errors.rs:21:5\n    |\n21  |     Parse(chrono::ParseError),\n    |     ^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":530,"byte_start":525,"column_end":10,"column_start":5,"expansion":null,"file_name":"src/core/errors.rs","is_primary":true,"label":null,"line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":5,"text":"    Parse(chrono::ParseError),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":14891,"byte_start":14878,"column_end":147,"column_start":134,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":"expected `ParseError`, found `String`","line_end":268,"line_start":268,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":147,"highlight_start":134,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,"}]},{"byte_end":14877,"byte_start":14865,"column_end":133,"column_start":121,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":268,"line_start":268,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":133,"highlight_start":121,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/services/sprint_service.rs:280:134\n    |\n280 | ...qlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,\n    |                                       ------------ ^^^^^^^^^^^^^ expected `ParseError`, found `String`\n    |                                       |\n    |                                       arguments to this enum variant are incorrect\n    |\nnote: tuple variant defined here\n   --> src/core/errors.rs:21:5\n    |\n21  |     Parse(chrono::ParseError),\n    |     ^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":530,"byte_start":525,"column_end":10,"column_start":5,"expansion":null,"file_name":"src/core/errors.rs","is_primary":true,"label":null,"line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":5,"text":"    Parse(chrono::ParseError),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":15753,"byte_start":15740,"column_end":147,"column_start":134,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":"expected `ParseError`, found `String`","line_end":280,"line_start":280,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":147,"highlight_start":134,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,"}]},{"byte_end":15739,"byte_start":15727,"column_end":133,"column_start":121,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":280,"line_start":280,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":133,"highlight_start":121,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e.to_string()))))?,"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n   --> src/services/sprint_service.rs:336:134\n    |\n336 | ...rusqlite::types::Type::Text, Box::new(Error::Parse(e))))?, // Corrected error mapping\n    |                                          ------------ ^ expected `ParseError`, found `Error`\n    |                                          |\n    |                                          arguments to this enum variant are incorrect\n    |\nnote: tuple variant defined here\n   --> src/core/errors.rs:21:5\n    |\n21  |     Parse(chrono::ParseError),\n    |     ^^^^^\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"note","message":"tuple variant defined here","rendered":null,"spans":[{"byte_end":530,"byte_start":525,"column_end":10,"column_start":5,"expansion":null,"file_name":"src/core/errors.rs","is_primary":true,"label":null,"line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":10,"highlight_start":5,"text":"    Parse(chrono::ParseError),"}]}]}],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":19091,"byte_start":19090,"column_end":135,"column_start":134,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":true,"label":"expected `ParseError`, found `Error`","line_end":336,"line_start":336,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":135,"highlight_start":134,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e))))?, // Corrected error mapping"}]},{"byte_end":19089,"byte_start":19077,"column_end":133,"column_start":121,"expansion":null,"file_name":"src/services/sprint_service.rs","is_primary":false,"label":"arguments to this enum variant are incorrect","line_end":336,"line_start":336,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":133,"highlight_start":121,"text":"                        .map_err(|e| rusqlite::Error::FromSqlConversionFailure(0, rusqlite::types::Type::Text, Box::new(Error::Parse(e))))?, // Corrected error mapping"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"error[E0282]: type annotations needed\n  --> src/services/task_service.rs:47:19\n   |\n43 |             Ok(task)\n   |             -------- type must be known at this point\n...\n47 |         .map_err(|e| Error::DatabaseOperation(format!(\"SQL execution error: {}\", e)))\n   |                   ^\n   |\nhelp: consider giving this closure parameter an explicit type\n   |\n47 |         .map_err(|e: /* Type */| Error::DatabaseOperation(format!(\"SQL execution error: {}\", e)))\n   |                    ++++++++++++\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"consider giving this closure parameter an explicit type","rendered":null,"spans":[{"byte_end":1521,"byte_start":1521,"column_end":20,"column_start":20,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":true,"label":null,"line_end":47,"line_start":47,"suggested_replacement":": /* Type */","suggestion_applicability":"HasPlaceholders","text":[{"highlight_end":20,"highlight_start":20,"text":"        .map_err(|e| Error::DatabaseOperation(format!(\"SQL execution error: {}\", e)))"}]}]}],"code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","message":"type annotations needed","spans":[{"byte_end":1393,"byte_start":1385,"column_end":21,"column_start":13,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":false,"label":"type must be known at this point","line_end":43,"line_start":43,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":13,"text":"            Ok(task)"}]},{"byte_end":1521,"byte_start":1520,"column_end":20,"column_start":19,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":true,"label":null,"line_end":47,"line_start":47,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":20,"highlight_start":19,"text":"        .map_err(|e| Error::DatabaseOperation(format!(\"SQL execution error: {}\", e)))"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `config`\n  --> src/cli/output.rs:77:32\n   |\n77 | pub fn print_task(task: &Task, config: &crate::app_config::Config) {\n   |                                ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":2590,"byte_start":2584,"column_end":38,"column_start":32,"expansion":null,"file_name":"src/cli/output.rs","is_primary":true,"label":null,"line_end":77,"line_start":77,"suggested_replacement":"_config","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":38,"highlight_start":32,"text":"pub fn print_task(task: &Task, config: &crate::app_config::Config) {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `config`","spans":[{"byte_end":2590,"byte_start":2584,"column_end":38,"column_start":32,"expansion":null,"file_name":"src/cli/output.rs","is_primary":true,"label":null,"line_end":77,"line_start":77,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":32,"text":"pub fn print_task(task: &Task, config: &crate::app_config::Config) {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `id`\n  --> src/services/task_service.rs:50:36\n   |\n50 |     async fn get_task_by_id(&self, id: String) -> Result<Option<Task>> {\n   |                                    ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":1632,"byte_start":1630,"column_end":38,"column_start":36,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":true,"label":null,"line_end":50,"line_start":50,"suggested_replacement":"_id","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":38,"highlight_start":36,"text":"    async fn get_task_by_id(&self, id: String) -> Result<Option<Task>> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `id`","spans":[{"byte_end":1632,"byte_start":1630,"column_end":38,"column_start":36,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":true,"label":null,"line_end":50,"line_start":50,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":38,"highlight_start":36,"text":"    async fn get_task_by_id(&self, id: String) -> Result<Option<Task>> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `task`\n  --> src/services/task_service.rs:55:33\n   |\n55 |     async fn update_task(&self, task: Task) -> Result<Task> {\n   |                                 ^^^^ help: if this is intentional, prefix it with an underscore: `_task`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":1816,"byte_start":1812,"column_end":37,"column_start":33,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":"_task","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":37,"highlight_start":33,"text":"    async fn update_task(&self, task: Task) -> Result<Task> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `task`","spans":[{"byte_end":1816,"byte_start":1812,"column_end":37,"column_start":33,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":true,"label":null,"line_end":55,"line_start":55,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":37,"highlight_start":33,"text":"    async fn update_task(&self, task: Task) -> Result<Task> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"warning: unused variable: `id`\n  --> src/services/task_service.rs:60:33\n   |\n60 |     async fn delete_task(&self, id: String) -> Result<()> {\n   |                                 ^^ help: if this is intentional, prefix it with an underscore: `_id`\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"if this is intentional, prefix it with an underscore","rendered":null,"spans":[{"byte_end":1988,"byte_start":1986,"column_end":35,"column_start":33,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":true,"label":null,"line_end":60,"line_start":60,"suggested_replacement":"_id","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":35,"highlight_start":33,"text":"    async fn delete_task(&self, id: String) -> Result<()> {"}]}]}],"code":{"code":"unused_variables","explanation":null},"level":"warning","message":"unused variable: `id`","spans":[{"byte_end":1988,"byte_start":1986,"column_end":35,"column_start":33,"expansion":null,"file_name":"src/services/task_service.rs","is_primary":true,"label":null,"line_end":60,"line_start":60,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":35,"highlight_start":33,"text":"    async fn delete_task(&self, id: String) -> Result<()> {"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"Some errors have detailed explanations: E0107, E0195, E0277, E0282, E0308, E0412, E0599.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"Some errors have detailed explanations: E0107, E0195, E0277, E0282, E0308, E0412, E0599.","spans":[]}}
{"reason":"compiler-message","package_id":"path+file:///Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc#llmdocs@0.1.0","manifest_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/Cargo.toml","target":{"kind":["lib"],"crate_types":["lib"],"name":"llmdocs","src_path":"/Users/mvcorrea/Private/2025-06-11_llmdocs-rust/llmdocs-rust/llmdocs_v2/llmdoc/src/lib.rs","edition":"2021","doc":true,"doctest":true,"test":true},"message":{"rendered":"For more information about an error, try `rustc --explain E0107`.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"For more information about an error, try `rustc --explain E0107`.","spans":[]}}
error: could not compile `llmdocs` (lib) due to 38 previous errors; 30 warnings emitted
{"reason":"build-finished","success":false}
